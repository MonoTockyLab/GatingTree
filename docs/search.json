[{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"defining-thresholds-for-marker-positivity-using-interactive-sessions","dir":"Articles","previous_headings":"","what":"Defining Thresholds for Marker Positivity Using Interactive Sessions","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"vignette demonstrates use DefineNegatives function, enables interactive definition thresholds marker positivity/negativity (autofluorescence). interactively define autofluorescence without negative controls, run: Running DefineNegatives initiates interactive session, prompting set thresholds marker positivity.","code":"# Interactively define marker positivity/ autofluorescence x <- DefineNegatives(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"step-1-selecting-markers","dir":"Articles","previous_headings":"Defining Thresholds for Marker Positivity Using Interactive Sessions","what":"Step 1: Selecting Markers","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"First, select markers want set thresholds. prompt appear allowing choose markers dataset.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"step-2-choosing-the-y-axis-variable","dir":"Articles","previous_headings":"Defining Thresholds for Marker Positivity Using Interactive Sessions","what":"Step 2: Choosing the Y-axis Variable","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"Next, choose variable y-axis generate 2D plot setting threshold along x-axis (.e., chosen marker). Alternatively, can select “Density” generate density plot.  Thank clarifying distinction. ’s essential apply correct terminology different markers based staining characteristics data distribution. ’s revised version R Markdown content accounts variability markers interpreted, using “high vs low” “positive vs negative” designations appropriate:","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"using-a-density-plot-histogram","dir":"Articles","previous_headings":"","what":"Using a Density Plot (Histogram)","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"select “Density,” density plot (smoothed histogram) marker’s expression levels displayed:  markers like CD45 CD44, staining observed cells, set threshold ‘high’ ‘low’. markers, determine threshold differentiate ‘positive’ ‘negative’ populations, particularly clear autofluorescence background separation visible. y-axis values considered selection. Confirming Selection: clicking, press Escape (ESC) key confirm choice.  see prompt terminal: Yes: Accepts threshold moves next marker. : Allows redo threshold selection current marker. Cancel: Exits interactive session.","code":"Happy with your gating? (Yes/no/cancel)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"using-a-2d-plot","dir":"Articles","previous_headings":"","what":"Using a 2D Plot","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"Alternatively, can select different marker y-axis create 2D scatter plot. method can useful depending data structure characteristics antibodies.  Defining Threshold: Click plot desired threshold point along x-axis. , y-axis values ignored threshold setting. Confirming Selection: Press Escape (ESC) key confirm choice. confirming, ’ll receive terminal prompt confirm redo selection.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"completing-the-interactive-session","dir":"Articles","previous_headings":"","what":"Completing the Interactive Session","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"thresholds set selected markers, interactive session complete automatically. FlowObject (x) now contains defined thresholds, can used subsequent analyses GatingTree package.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"considerations-and-best-practice","dir":"Articles","previous_headings":"","what":"Considerations and Best Practice:","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"automated approach using staining controls tested found impractical due challenges autofluorescence variability negative populations. Manual interactive thresholding remains recommended method, future development aims improve automation threshold determination. Thus, currently, recommended approach follows: Initially use density plot option examine plots distinct peaks inflection points. Place thresholds appropriately based marker characteristics: boundary high low expression levels broadly stained markers, positive negative populations others. density plot conclusive, use 2D plot biologically meaningful marker y-axis. initial thresholds satisfactory, rerun DefineNegatives specific markers adjust accordingly.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"defining-thresholds-for-marker-positivity-using-interactive-sessions","dir":"Articles","previous_headings":"","what":"Defining Thresholds for Marker Positivity Using Interactive Sessions","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"vignette demonstrates use DefineNegatives function, enables interactive definition thresholds marker positivity/negativity (autofluorescence). interactively define autofluorescence without negative controls, run: Running DefineNegatives initiates interactive session, prompting set thresholds marker positivity.","code":"# Interactively define marker positivity/ autofluorescence x <- DefineNegatives(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"step-1-selecting-markers","dir":"Articles","previous_headings":"Defining Thresholds for Marker Positivity Using Interactive Sessions","what":"Step 1: Selecting Markers","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"First, select markers want set thresholds. prompt appear allowing choose markers dataset.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"step-2-choosing-the-y-axis-variable","dir":"Articles","previous_headings":"Defining Thresholds for Marker Positivity Using Interactive Sessions","what":"Step 2: Choosing the Y-axis Variable","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"Next, choose variable y-axis generate 2D plot setting threshold along x-axis (.e., chosen marker). Alternatively, can select “Density” generate density plot.  Thank clarifying distinction. ’s essential apply correct terminology different markers based staining characteristics data distribution. ’s revised version R Markdown content accounts variability markers interpreted, using “high vs low” “positive vs negative” designations appropriate:","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"using-a-density-plot-histogram","dir":"Articles","previous_headings":"","what":"Using a Density Plot (Histogram)","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"select “Density,” density plot (smoothed histogram) marker’s expression levels displayed:  markers like CD45 CD44, staining observed cells, set threshold ‘high’ ‘low’. markers, determine threshold differentiate ‘positive’ ‘negative’ populations, particularly clear autofluorescence background separation visible. y-axis values considered selection. Confirming Selection: clicking, press Escape (ESC) key confirm choice.  see prompt terminal: Yes: Accepts threshold moves next marker. : Allows redo threshold selection current marker. Cancel: Exits interactive session.","code":"Happy with your gating? (Yes/no/cancel)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"using-a-2d-plot","dir":"Articles","previous_headings":"","what":"Using a 2D Plot","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"Alternatively, can select different marker y-axis create 2D scatter plot. method can useful depending data structure characteristics antibodies.  Defining Threshold: Click plot desired threshold point along x-axis. , y-axis values ignored threshold setting. Confirming Selection: Press Escape (ESC) key confirm choice. confirming, ’ll receive terminal prompt confirm redo selection.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"completing-the-interactive-session","dir":"Articles","previous_headings":"","what":"Completing the Interactive Session","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"thresholds set selected markers, interactive session complete automatically. FlowObject (x) now contains defined thresholds, can used subsequent analyses GatingTree package.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/DefineNegatives.html","id":"considerations-and-best-practice","dir":"Articles","previous_headings":"","what":"Considerations and Best Practice:","title":"GatingTree: Using DefineNegatives for Determining Positive/Negative Thresholds","text":"automated approach using staining controls tested found impractical due challenges autofluorescence variability negative populations. Manual interactive thresholding remains recommended method, future development aims improve automation threshold determination. Thus, currently, recommended approach follows: Initially use density plot option examine plots distinct peaks inflection points. Place thresholds appropriately based marker characteristics: boundary high low expression levels broadly stained markers, positive negative populations others. density plot conclusive, use 2D plot biologically meaningful marker y-axis. initial thresholds satisfactory, rerun DefineNegatives specific markers adjust accordingly.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"getting-started-with-gatingtree","dir":"Articles","previous_headings":"","what":"Getting Started with GatingTree","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"vignette demonstrates analyze cytometry data using GatingTree package. walk entire workflow, including data loading, preprocessing, creating FlowObject, data transformation, defining positive/negative thresholds interactively, performing gating tree analysis, visualizing results.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"loading-libraries-and-data","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"1. Loading Libraries and Data","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"First, load necessary libraries download test data using HDCytoData. command downloads hybrid mass cytometry dataset constructed spiking small percentage Acute Myeloid Leukemia (AML) cells healthy bone marrow cells (Weber et al., 2019).","code":"library(GatingTree) library(HDCytoData) library(flowCore) d_SE <- Weber_AML_sim_main_5pc_SE()"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"preprocessing-data","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"2. Preprocessing Data","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"convert raw cytometry data format suitable GatingTree analysis mapping experiment metadata filtering relevant markers.","code":"# Extract experiment information and channel names experiment_info <- d_SE@metadata$experiment_info channel_name <- colnames(d_SE)  # Prepare sample definitions sampledef <- experiment_info[, c(\"sample_id\", \"group_id\")] colnames(sampledef) <- c('file','group') # Filter markers based on specific criteria marker_info <- as.data.frame(d_SE@colData) logic <- marker_info$marker_class == 'type' | marker_info$marker_name == 'DNA1' marker_info <- as.data.frame(marker_info[logic,]) # Extract expression data and adjust column names exprs <- assay(d_SE) annotationdf <- as.data.frame(rowData(d_SE)) logic <- colnames(exprs) %in% marker_info$channel_name data <- exprs[, logic] colnames(data) <- marker_info$marker_name colnames(data) <- gsub(\"-\", \"\", colnames(data)) data <- cbind(data, data.frame(file = annotationdf$sample_id)) data <- as.data.frame(data) # Define variables excluding 'DNA1' and 'file' cnlogic <- colnames(data) %in% c(\"DNA1\", \"file\") variables <- colnames(data)[!cnlogic] # Remove unnecessary samples logic <- grepl(pattern = 'CBF', data$file) Data <- data[!logic,] # Define sample definitions (grouping) by sampledef sampledef <- sampledef[!grepl(pattern = 'CBF', sampledef$group),]"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"creating-a-flowobject-and-applying-data-transformation","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"2. Creating a FlowObject and Applying Data Transformation","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"Create FlowObject using prepared data sample definitions. can display sample grouping using showSampleDef function: Next, apply data transformation. moderated log transformation using LogData function recommended normalize data:","code":"# Create FlowObject x <- CreateFlowObject(Data = Data, sampledef = sampledef, experiment_name = 'AML_sim') showSampleDef(x) ##          file   group ## 1  healthy_H1 healthy ## 2  healthy_H2 healthy ## 3  healthy_H3 healthy ## 4  healthy_H4 healthy ## 5  healthy_H5 healthy ## 6       CN_H1      CN ## 7       CN_H2      CN ## 8       CN_H3      CN ## 9       CN_H4      CN ## 10      CN_H5      CN x <- LogData(x, variables = variables)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"determining-positivenegative-threshold-for-markers","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"4. Determining Positive/Negative Threshold for Markers","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"Use DefineNegatives define negative/positive threshold variables, activating interactive sessions. Alternatively, can import predefined thresholds using import_negative_gate_def: defining negative thresholds, inspect results visualizing using PlotDefineNegatives. produce density plots (histograms):  Vertical line (red line) indicates threshold value. 2d plots, choose variable y-axis:","code":"x <- DefineNegatives(x) file_path <- system.file(\"extdata\", \"negative_gate_def_AML.csv\", package = \"GatingTree\") negative_gate_def <- read.csv(file_path) x <- import_negative_gate_def(x, negative_gate_def) x <- PlotDefineNegatives(x, y_axis_var = 'Density', panel = 4) x <- PlotDefineNegatives(x, y_axis_var = \"CD3.logdata\", panel = 4)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"perform-gatingtree-analysis-and-visualization","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"5. Perform GatingTree Analysis and Visualization","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"data prepared thresholds defined, perform GatingTree analysis. Use createGatingTreeObject function conduct pathfinding analysis multidimensional marker space construct GatingTree. Visualize GatingTree output: necessary, prune GatingTree focus informative nodes: Visualize pruned GatingTree:","code":"x <- createGatingTreeObject(x, maxDepth = 5, min_cell_num=0, expr_group = 'CN', ctrl_group = 'healthy', verbose = FALSE) x <- GatingTreeToDF(x) node <- x@Gating$GatingTreeObject datatree <- convertToDataTree(node) graph <- convert_to_diagrammer(datatree, size_factor=1, all_labels = F)  library(DiagrammeR) render_graph(graph, width = 600, height = 600) x <- PruneGatingTree(x, max_entropy = 0.5, min_enrichment=0.5) pruned_node <- x@Gating$PrunedGatingTreeObject datatree2 <- convertToDataTree(pruned_node) graph <- convert_to_diagrammer(datatree2, size_factor=1) render_graph(graph, width = 600, height = 600)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/GatingTree_Workflow.html","id":"delta-enrichment-analysis","dir":"Articles","previous_headings":"Getting Started with GatingTree > Example 1: GatingTree Analysis of Cytometry Data Using R objects as Input Data","what":"6. Delta Enrichment Analysis","title":"GatingTree: Analyzing Cytometry Data with GatingTree","text":"Finally, assess impact adding marker state enrichment score using PlotDeltaEnrichment function.  PlotDeltaEnrichmentPrunedTree clarifies impact important markers using Pruned Gating Tree.","code":"x <- PlotDeltaEnrichment(x) ##   Kruskal-Wallis rank sum test ##  ## data: x and group ## Kruskal-Wallis chi-squared = 175.9087, df = 31, p-value = 0 ##  ##  ## alpha = 0.05 ## Reject Ho if p <= alpha/2 x <- PlotDeltaEnrichmentPrunedTree(x) ##   Kruskal-Wallis rank sum test ##  ## data: x and group ## Kruskal-Wallis chi-squared = 8.4725, df = 7, p-value = 0.29 ##  ##  ## alpha = 0.05 ## Reject Ho if p <= alpha/2"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/NavigatingMultidimensionalCytometryData.html","id":"current-challenges","dir":"Articles","previous_headings":"","what":"Current Challenges","title":"GatingTree: Navigating Multidimensional CytometryData","text":"Advancements Technology: Cytometry technologies advanced allow simultaneous analysis numerous markers. Complex Data Analysis: advancements introduce challenges analyzing biological effects, treatment effects, within high-dimensional data. Manual gating meet complex analytical demands. Reproducibility: Poor reproducibility across experiments. Practical Application: Identified cell clusters often translate effective gating strategies lab. Reproducibility Crisis: issues contribute reproducibility crisis biological medical research.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/NavigatingMultidimensionalCytometryData.html","id":"solutions-gatingtree-offers","dir":"Articles","previous_headings":"","what":"Solutions GatingTree Offers","title":"GatingTree: Navigating Multidimensional CytometryData","text":"Dimensional Reduction: rely dimensional reduction techniques. Pathfinding Analysis: Explores multidimensional marker space pinpoint group-specific features. Deliberately avoids traditional multidimensional analyses like PCA UMAP. use clustering algorithms. Directly applicable downstream processes. Ideal tasks flow cytometric sorting target populations.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/UsingCSVfileInputs.html","id":"step-1-preparing-sample-data-as-csv-files","dir":"Articles","previous_headings":"","what":"Step 1: Preparing Sample Data as CSV Files","title":"GatingTree: Initialization Using CSV File Inputs","text":"GatingTree can import expression data flow cytometric samples CSV format. method versatile compatible various flow cytometric analysis software packages. step--step guidance sample data preparation. Remove irregular data. Identify target cells analysis (e.g., lymphocytes identified FSC/SSC dead cell staining). Export sample’s data CSV file. Place sample files single directory. Note GatingTree performs analyses using entire set sample data single batch.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/UsingCSVfileInputs.html","id":"create-flow-object","dir":"Articles","previous_headings":"Step 1: Preparing Sample Data as CSV Files","what":"1-1. Create Flow Object","title":"GatingTree: Initialization Using CSV File Inputs","text":"Set working directory folder contains sample CSV files. using Terminal, activate R execute CreateFlowObject. default, CreateFlowObject options path = '.', select = TRUE. means CreateFlowObject imports files current working directory, graphic device automatically activated enable user file selection. character vector files imported, can use options select = TRUE, sample_file = filenames. example, import files extension ‘csv’:","code":"x <- CreateFlowObject() filenames <- list.files(pattern = \"*.csv$\") x <- CreateFlowObject(select = TRUE, sample_file = filenames)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/UsingCSVfileInputs.html","id":"defining-sample-grouping","dir":"Articles","previous_headings":"Step 1: Preparing Sample Data as CSV Files","what":"1-2. Defining Sample Grouping","title":"GatingTree: Initialization Using CSV File Inputs","text":"execution CreateFlowObject function generates new folder named sampledef, includes new CSV file named sample.csv. file used defining sample grouping. Editing sample.csv: - First Column: Contains automatically generated file names. - Second Column (‘group’): Assign samples experimental groups . Important Note: Ensure last row sample.csv ends newline character avoid read errors R. R struggles read file, open text editor add newline end last row. Example Edited sample.csv: Importing Sample Grouping edited, import grouping data back R using SampleDef function. imported data stored @sampledef slot FlowObject new SampleDef object. object crucial facilitating -group comparisons downstream analysis. can confirm sample definitions using showSampleDef. display data frame retained FlowObject.","code":"# Define sample grouping x <- SampleDef(x) # Show sample grouping showSampleDef(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/articles/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"GatingTree: Using DefineNegatives Determining Positive/Negative Thresholds  GatingTree: Analyzing Cytometry Data GatingTree  GatingTree: Navigating Multidimensional CytometryData  GatingTree: Initialization Using CSV File Inputs","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/authors (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Masahiro Ono. Author, maintainer.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/authors (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masahiro Ono (2024). GatingTree: Pathfinding Analysis Group-Specific Effects Cytometry Data. arXiv preprint arXiv:2411.00129 [q-bio.QM]. Available : https://arxiv.org/abs/2411.00129","code":"@Manual{,   title = {GatingTree: Pathfinding Analysis of Group-Specific Effects in Cytometry Data},   author = {Masahiro Ono},   year = {2024},   note = {arXiv preprint arXiv:2411.00129 [q-bio.QM]},   url = {https://arxiv.org/abs/2411.00129}, }"},{"path":"https://MonoTockyLab.github.io/GatingTree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Masahiro Ono. Author, maintainer.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masahiro Ono (2024). GatingTree: Pathfinding Analysis Group-Specific Effects Cytometry Data. arXiv preprint arXiv:2411.00129 [q-bio.QM]. Available : https://arxiv.org/abs/2411.00129","code":"@Manual{,   title = {GatingTree: Pathfinding Analysis of Group-Specific Effects in Cytometry Data},   author = {Masahiro Ono},   year = {2024},   note = {arXiv preprint arXiv:2411.00129 [q-bio.QM]},   url = {https://arxiv.org/abs/2411.00129}, }"},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Introduction Installation Vignettes Package Documentation Copyright, License, Citation Guidelines Ono Lab (MonoTockyLab) Contact ","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_1-introduction","dir":"","previous_headings":"","what":"1. Introduction","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree R package designed enhance analysis group-specific effects cytometry data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"current-challenges","dir":"","previous_headings":"1. Introduction","what":"Current Challenges","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Advancements cytometry technologies allow simultaneous analysis numerous markers. However, also introduce challenges data-oriented analysis biological effects, treatment effects, within high-dimensional data. Traditional methods manual gating insufficient demands. dimensional reduction methods (e.g., UMAP) without clustering increasingly common, struggle reproducibility across experiments. Moreover, cell clusters identify may translate effectively practical gating strategies laboratory use, exacerbating reproducibility crisis biological medical research.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"solutions-gatingtree-offers","dir":"","previous_headings":"1. Introduction","what":"Solutions GatingTree Offers","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree offers distinct approach relying dimensional reduction. Instead, explores multidimensional marker space pathfinding analysis pinpoint group-specific features. deliberately avoiding multidimensional analyses PCA UMAP, well clustering algorithms, GatingTree provides straightforward solutions can directly applied downstream applications flow cytometric sorting target populations.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_2-installation","dir":"","previous_headings":"","what":"2. Installation","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"install GatingTree, first ensure devtools package installed: , install GatingTree GitHub:","code":"install.packages(\"devtools\") library(devtools) install_github(\"MonoTockyLab/GatingTree\", dependencies = TRUE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_3-vignettes","dir":"","previous_headings":"","what":"3. Vignettes","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree package includes vignettes assist users efficiently applying GatingTree cytometry data. Basic Workflow: vignette provides users step--step guide processing transforming data, applying GatingTree analysis, visualizing results. DefineNegatives: vignette demonstrates function DefineNegatives can used determine positive/negative thresholds markers, critical preprocessing step GatingTree analysis. Using CSV File Inputs: vignette shows import cytometry sample data CSV files initialize FlowObject. Note: can access vignettes within R using browseVignettes(\"GatingTree\") command installing package.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_4-package-documentation","dir":"","previous_headings":"","what":"4. Package Documentation","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree package documentation available online: Website: https://MonoTockyLab.github.io/GatingTree/ site includes function reference manuals vignettes (tutorials). addition HTML manual pages, PDF manual GatingTree package available. can find installed package directory doc/, can access directly GitHub.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"copyright","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Copyright","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"code original graphical content within GatingTree package, including anime-like characters logos, copyrighted Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"license","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"License","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"distribution modification governed Apache License 2.0, ensures users freedom use change software way respects original authorship. See LICENSE file information.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"citing-gatingtree","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Citing GatingTree","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"use GatingTree research, please cite: Masahiro Ono (2024). GatingTree: Pathfinding Analysis Group-Specific Effects Cytometry Data. arXiv:2411.00129 [q-bio.QM]. Available :https://arxiv.org/abs/2411.00129.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"bibtex-entry","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"BibTeX Entry","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"","code":"@article{ono2024gatingtree,     title={GatingTree: Pathfinding Analysis of Group-Specific Effects in Cytometry Data},     author={Masahiro Ono},     year={2024},     journal={arXiv:2411.00129 [q-bio.QM]},     url={https://arxiv.org/abs/2411.00129}, }"},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"why-citation-is-important","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"Why Citation Is Important","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Citing software ’ve used crucial acknowledging contributions ensuring reproducibility, critical scientific progress. Giving credit developers researchers contributed tools utilize respects acknowledges intellectual contributions. Proper citations allow researchers access tools versions, thus replicating verifying scientific results. Citations integral scientific ecosystem; help trace evolution ideas enable others build upon existing research. kindly remind users citing software important citing academic articles maintaining integrity scientific record.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"further-resources","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"Further Resources","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"additional guidance citation practices maintaining research integrity, recommend visiting Committee Publication Ethics (COPE), offers valuable resources support adhering ethical practices scholarly publishing.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_6-the-ono-lab-monotockylab","dir":"","previous_headings":"","what":"6. The Ono Lab (MonoTockyLab)","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Masahiro Ono Lab (MonoTockyLab) offers innovative approaches analyzing omics flow cytometric data. lab particularly well-known development Timer--cell-kinetics--Activity (Tocky) integrated analysis immunological data using experiments computational analysis. Principal Investigator: Dr. Masahiro Ono, Reader Immunology Imperial College London. Dr. Ono creator developer Tocky. innovated transgenic computational technologies constitute Tocky. 2008, Dr. Ono initiated pioneering transition molecular immunology becoming Integrated Experimental Computational Immunologist, demonstrating visionary leadership pioneering spirit development application multidimensional analysis computational methods address experimental immunological problems. Tocky represents one fusion technologies Dr. Ono created developed. Tocky employs Fluorescent Timer protein analyze temporal dynamics cell activities development vivo. lab integrates molecular biology, immunology, computational analysis develop novel research tools, thereby enhancing understanding immune cell biology.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"id_7-contact-and-more","dir":"","previous_headings":"","what":"7. Contact and More","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Email:  Personal Homepage: GitHub: Twitter: BlueSky: Professional Homepage: Imperial College London - Masahiro Ono","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Introduction Installation Vignettes Package Documentation Copyright, License, Citation Guidelines Ono Lab (MonoTockyLab) Contact ","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_1-introduction","dir":"","previous_headings":"","what":"1. Introduction","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree R package designed enhance analysis group-specific effects cytometry data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"current-challenges","dir":"","previous_headings":"1. Introduction","what":"Current Challenges","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Advancements cytometry technologies allow simultaneous analysis numerous markers. However, also introduce challenges data-oriented analysis biological effects, treatment effects, within high-dimensional data. Traditional methods manual gating insufficient demands. dimensional reduction methods (e.g., UMAP) without clustering increasingly common, struggle reproducibility across experiments. Moreover, cell clusters identify may translate effectively practical gating strategies laboratory use, exacerbating reproducibility crisis biological medical research.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"solutions-gatingtree-offers","dir":"","previous_headings":"1. Introduction","what":"Solutions GatingTree Offers","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree offers distinct approach relying dimensional reduction. Instead, explores multidimensional marker space pathfinding analysis pinpoint group-specific features. deliberately avoiding multidimensional analyses PCA UMAP, well clustering algorithms, GatingTree provides straightforward solutions can directly applied downstream applications flow cytometric sorting target populations.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_2-installation","dir":"","previous_headings":"","what":"2. Installation","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"install GatingTree, first ensure devtools package installed: , install GatingTree GitHub:","code":"install.packages(\"devtools\") library(devtools) install_github(\"MonoTockyLab/GatingTree\", dependencies = TRUE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_3-vignettes","dir":"","previous_headings":"","what":"3. Vignettes","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree package includes vignettes assist users efficiently applying GatingTree cytometry data. Basic Workflow: vignette provides users step--step guide processing transforming data, applying GatingTree analysis, visualizing results. DefineNegatives: vignette demonstrates function DefineNegatives can used determine positive/negative thresholds markers, critical preprocessing step GatingTree analysis. Using CSV File Inputs: vignette shows import cytometry sample data CSV files initialize FlowObject. Note: can access vignettes within R using browseVignettes(\"GatingTree\") command installing package.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_4-package-documentation","dir":"","previous_headings":"","what":"4. Package Documentation","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"GatingTree package documentation available online: Website: https://MonoTockyLab.github.io/GatingTree/ site includes function reference manuals vignettes (tutorials). addition HTML manual pages, PDF manual GatingTree package available. can find installed package directory doc/, can access directly GitHub.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"copyright","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Copyright","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"code original graphical content within GatingTree package, including anime-like characters logos, copyrighted Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"license","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"License","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"distribution modification governed Apache License 2.0, ensures users freedom use change software way respects original authorship. See LICENSE file information.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"citing-gatingtree","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Citing GatingTree","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"use GatingTree research, please cite: Masahiro Ono (2024). GatingTree: Pathfinding Analysis Group-Specific Effects Cytometry Data. arXiv:2411.00129 [q-bio.QM]. Available :https://arxiv.org/abs/2411.00129.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"bibtex-entry","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"BibTeX Entry","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"","code":"@article{ono2024gatingtree,     title={GatingTree: Pathfinding Analysis of Group-Specific Effects in Cytometry Data},     author={Masahiro Ono},     year={2024},     journal={arXiv:2411.00129 [q-bio.QM]},     url={https://arxiv.org/abs/2411.00129}, }"},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"why-citation-is-important","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"Why Citation Is Important","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Citing software ’ve used crucial acknowledging contributions ensuring reproducibility, critical scientific progress. Giving credit developers researchers contributed tools utilize respects acknowledges intellectual contributions. Proper citations allow researchers access tools versions, thus replicating verifying scientific results. Citations integral scientific ecosystem; help trace evolution ideas enable others build upon existing research. kindly remind users citing software important citing academic articles maintaining integrity scientific record.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"further-resources","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing GatingTree","what":"Further Resources","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"additional guidance citation practices maintaining research integrity, recommend visiting Committee Publication Ethics (COPE), offers valuable resources support adhering ethical practices scholarly publishing.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_6-the-ono-lab-monotockylab","dir":"","previous_headings":"","what":"6. The Ono Lab (MonoTockyLab)","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Masahiro Ono Lab (MonoTockyLab) offers innovative approaches analyzing omics flow cytometric data. lab particularly well-known development Timer--cell-kinetics--Activity (Tocky) integrated analysis immunological data using experiments computational analysis. Principal Investigator: Dr. Masahiro Ono, Reader Immunology Imperial College London. Dr. Ono creator developer Tocky. innovated transgenic computational technologies constitute Tocky. 2008, Dr. Ono initiated pioneering transition molecular immunology becoming Integrated Experimental Computational Immunologist, demonstrating visionary leadership pioneering spirit development application multidimensional analysis computational methods address experimental immunological problems. Tocky represents one fusion technologies Dr. Ono created developed. Tocky employs Fluorescent Timer protein analyze temporal dynamics cell activities development vivo. lab integrates molecular biology, immunology, computational analysis develop novel research tools, thereby enhancing understanding immune cell biology.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/index.html","id":"id_7-contact-and-more","dir":"","previous_headings":"","what":"7. Contact and More","title":"Pathfinding Analysis of Group-Specific Effects in Cytometry Data","text":"Email:  Personal Homepage: GitHub: Twitter: BlueSky: Professional Homepage: Imperial College London - Masahiro Ono","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Create FlowObject by importing flow cytometric data — CreateFlowObject","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"function constructs new FlowObject using either data imported CSV files data provided directly arguments.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"","code":"CreateFlowObject(   path = \".\",   select = TRUE,   sample_file = NULL,   Data = NULL,   sampledef = NULL,   experiment_name = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"path Path CSV files. select Whether select files via interactive window. sample_file select FALSE, vector sample file names. Data data frame containing flow cytometric expression data. provided, file reading skipped. sampledef object class SampleDef list containing sample definitions. provided, sampledef population skipped. experiment_name Name experiment.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"FlowObject","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"","code":"if (FALSE) { # \\dontrun{ x  <-  CreateFlowObject() } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create FlowObject by importing flow cytometric data — CreateFlowObject","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"function constructs new FlowObject using either data imported CSV files data provided directly arguments.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"","code":"CreateFlowObject(   path = \".\",   select = TRUE,   sample_file = NULL,   Data = NULL,   sampledef = NULL,   experiment_name = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"path Path CSV files. select Whether select files via interactive window. sample_file select FALSE, vector sample file names. Data data frame containing flow cytometric expression data. provided, file reading skipped. sampledef object class SampleDef list containing sample definitions. provided, sampledef population skipped. experiment_name Name experiment.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"FlowObject","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/CreateFlowObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create FlowObject by importing flow cytometric data — CreateFlowObject","text":"","code":"if (FALSE) { # \\dontrun{ x  <-  CreateFlowObject() } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"function allows interactive setting thresholds plots define negative positive gates markers. Users can choose plot data 2D scatter plots density plots, may utilize pseudocolor enhance visualization.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"","code":"DefineNegatives(   x,   select = TRUE,   max_cells_displayed = 30000,   y_axis_var = NULL,   pseudocolour = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"x FlowObject containing data. select Logical, whether interactively select markers processed. FALSE, logged expression variables used. Default TRUE. max_cells_displayed Maximum number cells displayed plots determining negative threshold. y_axis_var variable use y-axis interactive plot, 'Density' use density plot. NULL (default), user prompted select variable x@Data. pseudocolour Logical, whether use pseudocolor based density scatter plots. Default TRUE. option FALSE use monochrome.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"modified FlowObject containing updated threshold values autofluorescence         selected variables slot QCdata. can repeat DefineNegatives renew         adjust negative thresholds variables.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"","code":"if (FALSE) { # \\dontrun{ x <- DefineNegatives(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"function allows interactive setting thresholds plots define negative positive gates markers. Users can choose plot data 2D scatter plots density plots, may utilize pseudocolor enhance visualization.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"","code":"DefineNegatives(   x,   select = TRUE,   max_cells_displayed = 30000,   y_axis_var = NULL,   pseudocolour = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"x FlowObject containing data. select Logical, whether interactively select markers processed. FALSE, logged expression variables used. Default TRUE. max_cells_displayed Maximum number cells displayed plots determining negative threshold. y_axis_var variable use y-axis interactive plot, 'Density' use density plot. NULL (default), user prompted select variable x@Data. pseudocolour Logical, whether use pseudocolor based density scatter plots. Default TRUE. option FALSE use monochrome.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"modified FlowObject containing updated threshold values autofluorescence         selected variables slot QCdata. can repeat DefineNegatives renew         adjust negative thresholds variables.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/DefineNegatives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively determine gates to define negative (and positive) regions for each marker expression — DefineNegatives","text":"","code":"if (FALSE) { # \\dontrun{ x <- DefineNegatives(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/FlowObject-class (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"A class representing a FlowObject object — FlowObject-class","title":"A class representing a FlowObject object — FlowObject-class","text":"class provides representation FlowObject object.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/FlowObject-class (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A class representing a FlowObject object — FlowObject-class","text":"Data data frame containing flow cytometric expression data sampledef SampleDef object containing sample file definitions. metadata list containing annotation data prep list containing sample file definitions. Clustering list containing cell identities clustering data Gating list containing gating information. QCdata list containing quality control information. Transformation list containing settings data transformation, including log data settings.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/FlowObject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A class representing a FlowObject object — FlowObject-class","title":"A class representing a FlowObject object — FlowObject-class","text":"class provides representation FlowObject object.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/FlowObject-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A class representing a FlowObject object — FlowObject-class","text":"Data data frame containing flow cytometric expression data sampledef SampleDef object containing sample file definitions. metadata list containing annotation data prep list containing sample file definitions. Clustering list containing cell identities clustering data Gating list containing gating information. QCdata list containing quality control information. Transformation list containing settings data transformation, including log data settings.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"function processes Gating Tree object flow cytometry analysis package, extracting calculating various statistics enrichment, entropy, delta values gate. returns object additional data frames attached contain detailed analysis results.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"","code":"GatingTreeToDF(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"FlowObject GatingTreeDF.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"function traverses gating tree recursively collect enrichment   entropy values node. calculates deltas enrichment values differences   consecutive gates. Additionally, computes maximum enrichment statistic   path tree, sorting values identify significant   gates. Interaction effects (IE) detailed breakdown changes enrichment values   also calculated stored returned object.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"","code":"if (FALSE) { # \\dontrun{ x <- GatingTreeToDF(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"function processes Gating Tree object flow cytometry analysis package, extracting calculating various statistics enrichment, entropy, delta values gate. returns object additional data frames attached contain detailed analysis results.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"","code":"GatingTreeToDF(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"FlowObject GatingTreeDF.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"function traverses gating tree recursively collect enrichment   entropy values node. calculates deltas enrichment values differences   consecutive gates. Additionally, computes maximum enrichment statistic   path tree, sorting values identify significant   gates. Interaction effects (IE) detailed breakdown changes enrichment values   also calculated stored returned object.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/GatingTreeToDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree Object to Data Frames — GatingTreeToDF","text":"","code":"if (FALSE) { # \\dontrun{ x <- GatingTreeToDF(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Log fluorescence data — LogData","title":"Log fluorescence data — LogData","text":"Log fluorescence data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log fluorescence data — LogData","text":"","code":"LogData(x, graphics = TRUE, variables = NULL, prompt = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log fluorescence data — LogData","text":"x FlowObject containing non-logged, raw fluorescence data graphics Whether use graphic device choose variables log transformation. variables character vector defining variables log-transformed. prompt Whether invoke prompt asking optional questions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log fluorescence data — LogData","text":"logged data. FlowObject include slot  logdata_parameters slot Transformation, includes list object logged channel names parameter s used log transformation: x_log = log10 (x - s + 1)","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log fluorescence data — LogData","text":"","code":"if (FALSE) { # \\dontrun{ x  <-  LogData(x) #x is a FlowObject } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData.html","id":null,"dir":"Reference","previous_headings":"","what":"Log fluorescence data — LogData","title":"Log fluorescence data — LogData","text":"Log fluorescence data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log fluorescence data — LogData","text":"","code":"LogData(x, graphics = TRUE, variables = NULL, prompt = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log fluorescence data — LogData","text":"x FlowObject containing non-logged, raw fluorescence data graphics Whether use graphic device choose variables log transformation. variables character vector defining variables log-transformed. prompt Whether invoke prompt asking optional questions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log fluorescence data — LogData","text":"logged data. FlowObject include slot  logdata_parameters slot Transformation, includes list object logged channel names parameter s used log transformation: x_log = log10 (x - s + 1)","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/LogData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log fluorescence data — LogData","text":"","code":"if (FALSE) { # \\dontrun{ x  <-  LogData(x) #x is a FlowObject } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"function moderates extreme negative outliers specified variables FlowObject replacing values random numbers. random numbers drawn normal distribution determined data lying within `negative_gate_def` thresholds FlowObject. typically used handle outliers flow cytometry data defining negative gates using DefineNegative function.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"","code":"NormAF(x, var = NULL, plot = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"x FlowObject already processed using DefineNegative. var character vector specifying variables (markers) FlowObject moderation extreme negative values performed. NULL, user prompted select variables interactively. plot Logical, whether produce diagnotic plots.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"modified FlowObject extreme negative values specified   variables replaced random numbers based distribution values   within defined negative gates. modification intended reduce   impact extreme outliers subsequent analyses.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming 'x' is a valid FlowObject with required preprocessing:   x <- NormAF(x, var = c(\"marker1\", \"marker2\")) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"function moderates extreme negative outliers specified variables FlowObject replacing values random numbers. random numbers drawn normal distribution determined data lying within `negative_gate_def` thresholds FlowObject. typically used handle outliers flow cytometry data defining negative gates using DefineNegative function.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"","code":"NormAF(x, var = NULL, plot = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"x FlowObject already processed using DefineNegative. var character vector specifying variables (markers) FlowObject moderation extreme negative values performed. NULL, user prompted select variables interactively. plot Logical, whether produce diagnotic plots.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"modified FlowObject extreme negative values specified   variables replaced random numbers based distribution values   within defined negative gates. modification intended reduce   impact extreme outliers subsequent analyses.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/NormAF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moderate Extreme Negative Outliers with Random Values within Noise — NormAF","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming 'x' is a valid FlowObject with required preprocessing:   x <- NormAF(x, var = c(\"marker1\", \"marker2\")) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"Plot threshold marker expression per determined DefineNegatives","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"","code":"PlotDefineNegatives(   x,   y_axis_var = NULL,   output = FALSE,   outputFile = \"DefineNegativePlot.pdf\",   panel = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"x FlowObject. y_axis_var variable use y-axis generated plots, 'Density' use density plot. output TRUE, plots generated file. default FALSE shows plots X window. outputFile output TRUE, defines filename output file. panel number panels included. NULL, panels included output plot.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"FlowObject returned safety.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"","code":"if (FALSE) { # \\dontrun{ PlotDefineNegatives(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"Plot threshold marker expression per determined DefineNegatives","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"","code":"PlotDefineNegatives(   x,   y_axis_var = NULL,   output = FALSE,   outputFile = \"DefineNegativePlot.pdf\",   panel = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"x FlowObject. y_axis_var variable use y-axis generated plots, 'Density' use density plot. output TRUE, plots generated file. default FALSE shows plots X window. outputFile output TRUE, defines filename output file. panel number panels included. NULL, panels included output plot.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"FlowObject returned safety.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDefineNegatives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the threshold for for each marker expression as per determined by DefineNegatives — PlotDefineNegatives","text":"","code":"if (FALSE) { # \\dontrun{ PlotDefineNegatives(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"function takes complex object containing gating tree data performs statistical tests evaluate significance delta enrichment interaction effects across markers. plots results boxplots returns modified object additional annotations based analysis.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"","code":"PlotDeltaEnrichment(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"Returns object `x` statistical values","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"function conducts Kruskal-Wallis tests determine significance   differences across markers, followed Dunn's test post-hoc analysis Bonferroni   correction significant.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotDeltaEnrichment(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"function takes complex object containing gating tree data performs statistical tests evaluate significance delta enrichment interaction effects across markers. plots results boxplots returns modified object additional annotations based analysis.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"","code":"PlotDeltaEnrichment(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"Returns object `x` statistical values","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"function conducts Kruskal-Wallis tests determine significance   differences across markers, followed Dunn's test post-hoc analysis Bonferroni   correction significant.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delta Enrichment or Interaction Effects for Each Marker — PlotDeltaEnrichment","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotDeltaEnrichment(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"Plot Delta Enrichment Interaction Effects Marker Using Pruned GatingTree","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"","code":"PlotDeltaEnrichmentPrunedTree(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"x FlowObject applying PruneGatingTree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"Returns object `x` statistical values","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"function conducts Kruskal-Wallis tests determine significance   differences across markers, followed Dunn's test post-hoc analysis Bonferroni   correction significant.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotDeltaEnrichmentPrunedTree(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"Plot Delta Enrichment Interaction Effects Marker Using Pruned GatingTree","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"","code":"PlotDeltaEnrichmentPrunedTree(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"x FlowObject applying PruneGatingTree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"Returns object `x` statistical values","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"function conducts Kruskal-Wallis tests determine significance   differences across markers, followed Dunn's test post-hoc analysis Bonferroni   correction significant.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotDeltaEnrichmentPrunedTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delta Enrichment or Interaction Effects for Each Marker Using Pruned GatingTree — PlotDeltaEnrichmentPrunedTree","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotDeltaEnrichmentPrunedTree(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"function plots two-dimensional flow cytometry data highlighting gated regions calculates quadrant statistics. handles data preprocessing manage outliers replacing extreme negative values values normal distribution within specified gates. function ideal analyzing visualizing flow cytometry data, providing insights distribution cell populations across specified markers.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"","code":"PlotFlow2D(   x,   graphics = FALSE,   output = \"output\",   markers = NULL,   states = NULL,   gating = TRUE,   split_group = TRUE,   max_cells_displayed = 30000 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"x FlowObject already processed using DefineNegative NormAF. graphics Logical, TRUE, enables graphical selection markers gating thresholds via GUI; otherwise, selections must input manually. Defaults FALSE. output directory path output plots data summaries saved. markers Optionally, vector marker names used gating; NULL, function prompts selection. states vector indicating gating state ('positive' 'negative') marker; NULL, function prompts selection. gating Logical, TRUE, applies gating based markers states provided; defaults TRUE. split_group Logical, TRUE, splits data 'group' variable within dataset separate analysis plotting; defaults TRUE. max_cells_displayed maximum number cells display plots, can help manage performance clarity visualizing dense datasets.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"Returns FlowObject additional provenance data indicating analysis steps performed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotFlow2D(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"function plots two-dimensional flow cytometry data highlighting gated regions calculates quadrant statistics. handles data preprocessing manage outliers replacing extreme negative values values normal distribution within specified gates. function ideal analyzing visualizing flow cytometry data, providing insights distribution cell populations across specified markers.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"","code":"PlotFlow2D(   x,   graphics = FALSE,   output = \"output\",   markers = NULL,   states = NULL,   gating = TRUE,   split_group = TRUE,   max_cells_displayed = 30000 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"x FlowObject already processed using DefineNegative NormAF. graphics Logical, TRUE, enables graphical selection markers gating thresholds via GUI; otherwise, selections must input manually. Defaults FALSE. output directory path output plots data summaries saved. markers Optionally, vector marker names used gating; NULL, function prompts selection. states vector indicating gating state ('positive' 'negative') marker; NULL, function prompts selection. gating Logical, TRUE, applies gating based markers states provided; defaults TRUE. split_group Logical, TRUE, splits data 'group' variable within dataset separate analysis plotting; defaults TRUE. max_cells_displayed maximum number cells display plots, can help manage performance clarity visualizing dense datasets.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"Returns FlowObject additional provenance data indicating analysis steps performed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotFlow2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Dimensional Plot with Gating and Quadrant Statistics — PlotFlow2D","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotFlow2D(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Node Scatter Plot — PlotNodeScatterPlot","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"function creates scatter plot visualization node percentages based given path gating tree. computes displays statistical summaries including means standard deviations group, adds error bars plot, marks significant differences asterisks.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"","code":"PlotNodeScatterPlot(x, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"x TockyObject FlowObject GatingTreeObject path character vector specifying path gating hierarchy.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"ggplot object representing node percentage scatter plot         error bars optionally asterisks denoting statistical significance.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"","code":"if (FALSE) { # \\dontrun{ PlotNodeScatterPlot(x, c(\"path\", \"to\", \"node\")) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Node Scatter Plot — PlotNodeScatterPlot","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"function creates scatter plot visualization node percentages based given path gating tree. computes displays statistical summaries including means standard deviations group, adds error bars plot, marks significant differences asterisks.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"","code":"PlotNodeScatterPlot(x, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"x TockyObject FlowObject GatingTreeObject path character vector specifying path gating hierarchy.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"ggplot object representing node percentage scatter plot         error bars optionally asterisks denoting statistical significance.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNodeScatterPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Node Scatter Plot — PlotNodeScatterPlot","text":"","code":"if (FALSE) { # \\dontrun{ PlotNodeScatterPlot(x, c(\"path\", \"to\", \"node\")) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"function moderates extreme negative outliers specified variables FlowObject replacing values random numbers. random numbers drawn normal distribution determined data lying within `negative_gate_def` thresholds FlowObject. typically used handle outliers flow cytometry data defining negative gates using DefineNegative function.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"","code":"PlotNormAF(x, graphics = FALSE, max_cells_displayed = 30000, output = \"output\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"x FlowObject already processed using DefineNegative NormAF. graphics Logical. default FALSE, showing variable options console. max_cells_displayed number cells displayed plots determining negative therehold. output character name output directory.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"FlowObject returned safety.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotNormAF(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"function moderates extreme negative outliers specified variables FlowObject replacing values random numbers. random numbers drawn normal distribution determined data lying within `negative_gate_def` thresholds FlowObject. typically used handle outliers flow cytometry data defining negative gates using DefineNegative function.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"","code":"PlotNormAF(x, graphics = FALSE, max_cells_displayed = 30000, output = \"output\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"x FlowObject already processed using DefineNegative NormAF. graphics Logical. default FALSE, showing variable options console. max_cells_displayed number cells displayed plots determining negative therehold. output character name output directory.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"FlowObject returned safety.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PlotNormAF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Effects of Autofluorescnce Modelling — PlotNormAF","text":"","code":"if (FALSE) { # \\dontrun{   x <- PlotNormAF(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"function prunes gating tree applying various statistical thresholds nodes based entropy, enrichment, average proportion metrics. Nodes meet specified criteria pruned tree. Additionally, p-values adjusted multiple comparisons.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"","code":"PruneGatingTree(   x,   max_entropy = 0.9,   min_enrichment = 0.1,   min_average_proportion = 0.001,   p_adjust_method = \"BY\",   theta = 0 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"x object, expected class 'FlowObject', containing gating tree data metadata. max_entropy Maximum allowable entropy node remain gating tree. min_enrichment Minimum enrichment required node remain gating tree. min_average_proportion Minimum average proportion cells required node remain gating tree. p_adjust_method character string indicating method used adjusting p-values multiple comparisons. Defaults '' (Benjamini-Yekutieli). theta numeric threshold added enrichment values node. threshold used enforce criterion nodes showing steady increase enrichment, greater threshold, can considered retention pruned gating tree. default zero.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"Returns modified object 'x' gating tree pruned according   specified parameters. function also attaches pruned gating tree data   frame containing node statistics object.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"function first identifies nodes meet specified entropy enrichment   criteria, computes statistical metrics nodes, prunes gating   tree based metrics average proportion criteria. Adjusted p-values   calculated account multiple testing.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"","code":"if (FALSE) { # \\dontrun{   updated_object <- PruneGatingTree(x, min_enrichment = 0.5,max_entropy =0.5) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"function prunes gating tree applying various statistical thresholds nodes based entropy, enrichment, average proportion metrics. Nodes meet specified criteria pruned tree. Additionally, p-values adjusted multiple comparisons.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"","code":"PruneGatingTree(   x,   max_entropy = 0.9,   min_enrichment = 0.1,   min_average_proportion = 0.001,   p_adjust_method = \"BY\",   theta = 0 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"x object, expected class 'FlowObject', containing gating tree data metadata. max_entropy Maximum allowable entropy node remain gating tree. min_enrichment Minimum enrichment required node remain gating tree. min_average_proportion Minimum average proportion cells required node remain gating tree. p_adjust_method character string indicating method used adjusting p-values multiple comparisons. Defaults '' (Benjamini-Yekutieli). theta numeric threshold added enrichment values node. threshold used enforce criterion nodes showing steady increase enrichment, greater threshold, can considered retention pruned gating tree. default zero.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"Returns modified object 'x' gating tree pruned according   specified parameters. function also attaches pruned gating tree data   frame containing node statistics object.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"function first identifies nodes meet specified entropy enrichment   criteria, computes statistical metrics nodes, prunes gating   tree based metrics average proportion criteria. Adjusted p-values   calculated account multiple testing.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/PruneGatingTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune a Gating Tree Based on Statistical Criteria — PruneGatingTree","text":"","code":"if (FALSE) { # \\dontrun{   updated_object <- PruneGatingTree(x, min_enrichment = 0.5,max_entropy =0.5) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"SampleDef — SampleDef","title":"SampleDef — SampleDef","text":"class represent sample definition object function updates FlowObject SampleDef object created CSV file provided data frame.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SampleDef — SampleDef","text":"","code":"SampleDef(   x,   sample_df = NULL,   path = \"sampledef\",   file = \"sample.csv\",   group_column = \"group\",   confirm = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SampleDef — SampleDef","text":"x FlowObject. sample_df Optional data frame containing sample definitions columns 'file' 'group'. path character string specifying path directory containing CSV file. Default './sampledef'. file character string specifying name CSV file. Default 'sample.csv'. group_column character string specifying column name sample grouping CSV file. confirm TRUE, prompts confirmation editing CSV file.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SampleDef — SampleDef","text":"modified FlowObject containing SampleDef object.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SampleDef — SampleDef","text":"","code":"if (FALSE) { # \\dontrun{ x <- SampleDef(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef.html","id":null,"dir":"Reference","previous_headings":"","what":"SampleDef — SampleDef","title":"SampleDef — SampleDef","text":"class represent sample definition object function updates FlowObject SampleDef object created CSV file provided data frame.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SampleDef — SampleDef","text":"","code":"SampleDef(   x,   sample_df = NULL,   path = \"sampledef\",   file = \"sample.csv\",   group_column = \"group\",   confirm = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SampleDef — SampleDef","text":"x FlowObject. sample_df Optional data frame containing sample definitions columns 'file' 'group'. path character string specifying path directory containing CSV file. Default './sampledef'. file character string specifying name CSV file. Default 'sample.csv'. group_column character string specifying column name sample grouping CSV file. confirm TRUE, prompts confirmation editing CSV file.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SampleDef — SampleDef","text":"modified FlowObject containing SampleDef object.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/SampleDef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SampleDef — SampleDef","text":"","code":"if (FALSE) { # \\dontrun{ x <- SampleDef(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Child Node to a Gating Tree — addChildNode","title":"Add a Child Node to a Gating Tree — addChildNode","text":"function adds new child node specified location gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Child Node to a Gating Tree — addChildNode","text":"","code":"addChildNode(rootNode, childNode, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Child Node to a Gating Tree — addChildNode","text":"rootNode root node node acting root sub-tree. childNode child node added. path path child node added.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Child Node to a Gating Tree — addChildNode","text":"modified node new child added.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Child Node to a Gating Tree — addChildNode","text":"","code":"if (FALSE) { # \\dontrun{ rootNode <- createGatingTreeObject(...) # Setup initial node childNode <- createChildNode(...) # Create a child node path <- \"rootNode\" addChildNode(rootNode, childNode, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Child Node to a Gating Tree — addChildNode","title":"Add a Child Node to a Gating Tree — addChildNode","text":"function adds new child node specified location gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Child Node to a Gating Tree — addChildNode","text":"","code":"addChildNode(rootNode, childNode, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Child Node to a Gating Tree — addChildNode","text":"rootNode root node node acting root sub-tree. childNode child node added. path path child node added.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Child Node to a Gating Tree — addChildNode","text":"modified node new child added.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/addChildNode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Child Node to a Gating Tree — addChildNode","text":"","code":"if (FALSE) { # \\dontrun{ rootNode <- createGatingTreeObject(...) # Setup initial node childNode <- createChildNode(...) # Create a child node path <- \"rootNode\" addChildNode(rootNode, childNode, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Add Prune Markers to Nodes — add_prune","title":"Add Prune Markers to Nodes — add_prune","text":"function recursively adds prune markers nodes tree based specific conditions related enrichment, entropy, average proportion.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Prune Markers to Nodes — add_prune","text":"","code":"add_prune(node, min_average_proportion = 0.001, theta = 0.02)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Prune Markers to Nodes — add_prune","text":"node node process. min_average_proportion minimum average proportion required prune node. theta threshold added current enrichment comparison.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Prune Markers to Nodes — add_prune","text":"node prune markers added.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Prune Markers to Nodes — add_prune","text":"","code":"if (FALSE) { # \\dontrun{   node <- add_prune(node, 0.001, 0.02) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Prune Markers to Nodes — add_prune","title":"Add Prune Markers to Nodes — add_prune","text":"function recursively adds prune markers nodes tree based specific conditions related enrichment, entropy, average proportion.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Prune Markers to Nodes — add_prune","text":"","code":"add_prune(node, min_average_proportion = 0.001, theta = 0.02)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Prune Markers to Nodes — add_prune","text":"node node process. min_average_proportion minimum average proportion required prune node. theta threshold added current enrichment comparison.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Prune Markers to Nodes — add_prune","text":"node prune markers added.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/add_prune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Prune Markers to Nodes — add_prune","text":"","code":"if (FALSE) { # \\dontrun{   node <- add_prune(node, 0.001, 0.02) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Gating Conditions — apply_gating_conditions","title":"Apply Gating Conditions — apply_gating_conditions","text":"function applies set gating conditions flow cytometry data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Gating Conditions — apply_gating_conditions","text":"","code":"apply_gating_conditions(data, combinations_matrix, thresholds)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Gating Conditions — apply_gating_conditions","text":"data data frame matrix containing flow cytometry data. combinations_matrix matrix specifying combinations gating conditions. thresholds vector thresholds gating conditions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Gating Conditions — apply_gating_conditions","text":"matrix indicating whether cell passes gating conditions.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Gating Conditions — apply_gating_conditions","text":"","code":"if (FALSE) { # \\dontrun{     gating_results <- apply_gating_conditions(marker_data, combinations_matrix, thresholds) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Gating Conditions — apply_gating_conditions","title":"Apply Gating Conditions — apply_gating_conditions","text":"function applies set gating conditions flow cytometry data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Gating Conditions — apply_gating_conditions","text":"","code":"apply_gating_conditions(data, combinations_matrix, thresholds)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Gating Conditions — apply_gating_conditions","text":"data data frame matrix containing flow cytometry data. combinations_matrix matrix specifying combinations gating conditions. thresholds vector thresholds gating conditions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Gating Conditions — apply_gating_conditions","text":"matrix indicating whether cell passes gating conditions.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/apply_gating_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Gating Conditions — apply_gating_conditions","text":"","code":"if (FALSE) { # \\dontrun{     gating_results <- apply_gating_conditions(marker_data, combinations_matrix, thresholds) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Baseline Entropy — baseline_entropy","title":"Calculate Baseline Entropy — baseline_entropy","text":"function calculates baseline entropy groups data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Baseline Entropy — baseline_entropy","text":"","code":"baseline_entropy(data)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Baseline Entropy — baseline_entropy","text":"data data frame containing group information.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Baseline Entropy — baseline_entropy","text":"calculated baseline entropy value.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Baseline Entropy — baseline_entropy","text":"","code":"if (FALSE) { # \\dontrun{ baseline_entropy(sampledef) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Baseline Entropy — baseline_entropy","title":"Calculate Baseline Entropy — baseline_entropy","text":"function calculates baseline entropy groups data.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Baseline Entropy — baseline_entropy","text":"","code":"baseline_entropy(data)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Baseline Entropy — baseline_entropy","text":"data data frame containing group information.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Baseline Entropy — baseline_entropy","text":"calculated baseline entropy value.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/baseline_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Baseline Entropy — baseline_entropy","text":"","code":"if (FALSE) { # \\dontrun{ baseline_entropy(sampledef) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Enrichment Between Two Groups — calculate_enrichment","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"function calculates log2-ratio sum percentages normalized group size experimental group control group. adds small constant avoid division zero.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"","code":"calculate_enrichment(   df,   percentage_data = \"node_percentage\",   expr_group = NULL,   ctrl_group = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"percentage_data character specify column name percentage data. expr_group name experimental group single string must match exactly one groups `sampledef`. ctrl_group name control group single string must match exactly one groups `sampledef`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"single numeric value representing log2-transformed ratio   normalized sums percentages experimental control groups.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ percentage <- c(0.1, 0.2, 0.15, 0.05) calculate_enrichment(df, \"exp\", \"ctrl\") } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Enrichment Between Two Groups — calculate_enrichment","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"function calculates log2-ratio sum percentages normalized group size experimental group control group. adds small constant avoid division zero.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"","code":"calculate_enrichment(   df,   percentage_data = \"node_percentage\",   expr_group = NULL,   ctrl_group = NULL )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"percentage_data character specify column name percentage data. expr_group name experimental group single string must match exactly one groups `sampledef`. ctrl_group name control group single string must match exactly one groups `sampledef`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"single numeric value representing log2-transformed ratio   normalized sums percentages experimental control groups.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Enrichment Between Two Groups — calculate_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ percentage <- c(0.1, 0.2, 0.15, 0.05) calculate_enrichment(df, \"exp\", \"ctrl\") } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Entropy — calculate_entropy","title":"Calculate Entropy — calculate_entropy","text":"function calculates entropy probability distribution.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Entropy — calculate_entropy","text":"","code":"calculate_entropy(probs)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Entropy — calculate_entropy","text":"probs numeric vector representing probability distribution.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Entropy — calculate_entropy","text":"calculated entropy value.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Entropy — calculate_entropy","text":"","code":"if (FALSE) { # \\dontrun{ entropy_result <- calculate_entropy(probs) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Entropy — calculate_entropy","title":"Calculate Entropy — calculate_entropy","text":"function calculates entropy probability distribution.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Entropy — calculate_entropy","text":"","code":"calculate_entropy(probs)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Entropy — calculate_entropy","text":"probs numeric vector representing probability distribution.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Entropy — calculate_entropy","text":"calculated entropy value.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/calculate_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Entropy — calculate_entropy","text":"","code":"if (FALSE) { # \\dontrun{ entropy_result <- calculate_entropy(probs) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Collect All Enrichment Values Recursively — collect_all_enrichment","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"function recursively collects enrichment values gating tree structure. Starting provided node, traverses child nodes aggregate enrichment values list.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"","code":"collect_all_enrichment(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"tree tree node start collecting enrichment values. node structure expected `History` component containing `enrichment` values possibly `Children` sub-nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"list enrichment values collected recursively node children.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"Enrichment values extracted `History` component node,   available. function recursively explores child nodes collect   enrichment values.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"","code":"if (FALSE) { # \\dontrun{   enrichment_values <- collect_all_enrichment(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect All Enrichment Values Recursively — collect_all_enrichment","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"function recursively collects enrichment values gating tree structure. Starting provided node, traverses child nodes aggregate enrichment values list.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"","code":"collect_all_enrichment(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"tree tree node start collecting enrichment values. node structure expected `History` component containing `enrichment` values possibly `Children` sub-nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"list enrichment values collected recursively node children.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"Enrichment values extracted `History` component node,   available. function recursively explores child nodes collect   enrichment values.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect All Enrichment Values Recursively — collect_all_enrichment","text":"","code":"if (FALSE) { # \\dontrun{   enrichment_values <- collect_all_enrichment(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Collect All Entropy Values Recursively — collect_all_entropy","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"Similar `collect_all_enrichment`, function recursively collects entropy values specified node child nodes within gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"","code":"collect_all_entropy(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"tree tree node start collecting entropy values. Nodes expected `History` `entropy` values possibly `Children` sub-nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"list entropy values collected recursively node children.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"Entropy values gathered `History` component node,   present. function recursively navigates child nodes collect   entropy values.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"","code":"if (FALSE) { # \\dontrun{   entropy_values <- collect_all_entropy(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect All Entropy Values Recursively — collect_all_entropy","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"Similar `collect_all_enrichment`, function recursively collects entropy values specified node child nodes within gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"","code":"collect_all_entropy(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"tree tree node start collecting entropy values. Nodes expected `History` `entropy` values possibly `Children` sub-nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"list entropy values collected recursively node children.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"Entropy values gathered `History` component node,   present. function recursively navigates child nodes collect   entropy values.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_all_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect All Entropy Values Recursively — collect_all_entropy","text":"","code":"if (FALSE) { # \\dontrun{   entropy_values <- collect_all_entropy(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Collect History from Gating Tree — collect_history","title":"Collect History from Gating Tree — collect_history","text":"function recursively collects history nodes gating tree, aggregating historical data stored node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect History from Gating Tree — collect_history","text":"","code":"collect_history(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect History from Gating Tree — collect_history","text":"tree tree object representing root subtree gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect History from Gating Tree — collect_history","text":"list containing historical data tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect History from Gating Tree — collect_history","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `tree` is a root node of a gating tree with history data: historyData <- collect_history(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect History from Gating Tree — collect_history","title":"Collect History from Gating Tree — collect_history","text":"function recursively collects history nodes gating tree, aggregating historical data stored node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect History from Gating Tree — collect_history","text":"","code":"collect_history(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect History from Gating Tree — collect_history","text":"tree tree object representing root subtree gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect History from Gating Tree — collect_history","text":"list containing historical data tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect History from Gating Tree — collect_history","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `tree` is a root node of a gating tree with history data: historyData <- collect_history(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"function traverses gating tree collect enrichment data specifically leaf nodes, subdivisions occur.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"","code":"collect_leaf_enrichment(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"tree tree object may root node subtree gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"list enrichment data collected leaf nodes tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `tree` is a root node of a gating tree with enrichment data in leaf nodes: leafEnrichments <- collect_leaf_enrichment(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"function traverses gating tree collect enrichment data specifically leaf nodes, subdivisions occur.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"","code":"collect_leaf_enrichment(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"tree tree object may root node subtree gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"list enrichment data collected leaf nodes tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_leaf_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Enrichment Data from Leaf Nodes — collect_leaf_enrichment","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `tree` is a root node of a gating tree with enrichment data in leaf nodes: leafEnrichments <- collect_leaf_enrichment(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Markers from a Gating Tree — collect_markers","title":"Collect Markers from a Gating Tree — collect_markers","text":"function collects markers used gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Markers from a Gating Tree — collect_markers","text":"","code":"collect_markers(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Markers from a Gating Tree — collect_markers","text":"tree gating tree structure.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Markers from a Gating Tree — collect_markers","text":"vector unique markers used tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Markers from a Gating Tree — collect_markers","text":"","code":"if (FALSE) { # \\dontrun{ collect_markers(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Markers from a Gating Tree — collect_markers","title":"Collect Markers from a Gating Tree — collect_markers","text":"function collects markers used gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Markers from a Gating Tree — collect_markers","text":"","code":"collect_markers(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Markers from a Gating Tree — collect_markers","text":"tree gating tree structure.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Markers from a Gating Tree — collect_markers","text":"vector unique markers used tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/collect_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Markers from a Gating Tree — collect_markers","text":"","code":"if (FALSE) { # \\dontrun{ collect_markers(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"function converts node gating tree data tree node format, suitable processing visualization.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"","code":"convertToDataTree(node, pathName = \"rootNode\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"node node gating tree, usually containing statistical information child nodes. pathName string representing node path, defaults \"rootNode\".","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"data tree node object structured hierarchical data representations.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `node` is an object from a gating analysis tree: convertedNode <- convertToDataTree(node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"function converts node gating tree data tree node format, suitable processing visualization.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"","code":"convertToDataTree(node, pathName = \"rootNode\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"node node gating tree, usually containing statistical information child nodes. pathName string representing node path, defaults \"rootNode\".","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"data tree node object structured hierarchical data representations.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convertToDataTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree Node to Data Tree Node — convertToDataTree","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `node` is an object from a gating analysis tree: convertedNode <- convertToDataTree(node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"function takes gating tree object constructs graphical representation using DiagrammeR package. visually represents enrichment, entropy, optionally average proportion nodes gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"","code":"convert_to_diagrammer(   root,   size_factor = 1,   average_proportion = FALSE,   all_labels = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"root root node gating tree object, must properties like `isRoot`, `name`, `CurrentEnrichment`, `CurrentEntropy`, optionally `AverageProportion`. size_factor multiplier node sizes graph, allowing customization based enrichment average proportion values. average_proportion logical flag indicating whether use average proportion nodes adjust node sizes color gradient based enrichment values. all_labels Logical. TRUE, parameters included node within output graph.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"Returns DiagrammeR graph object representing gating tree nodes colored   sized according specified metrics.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"function recursively traverses gating tree, starting root,   adding nodes graph labels include relevant metrics. Node size color   determined either enrichment entropy values, depending `average_proportion` flag.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming 'root' is your gating tree root node   graph <- convert_to_diagrammer(root, size_factor = 1, average_proportion = TRUE)   # To view the graph   DiagrammeR::render_graph(graph) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"function takes gating tree object constructs graphical representation using DiagrammeR package. visually represents enrichment, entropy, optionally average proportion nodes gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"","code":"convert_to_diagrammer(   root,   size_factor = 1,   average_proportion = FALSE,   all_labels = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"root root node gating tree object, must properties like `isRoot`, `name`, `CurrentEnrichment`, `CurrentEntropy`, optionally `AverageProportion`. size_factor multiplier node sizes graph, allowing customization based enrichment average proportion values. average_proportion logical flag indicating whether use average proportion nodes adjust node sizes color gradient based enrichment values. all_labels Logical. TRUE, parameters included node within output graph.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"Returns DiagrammeR graph object representing gating tree nodes colored   sized according specified metrics.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"function recursively traverses gating tree, starting root,   adding nodes graph labels include relevant metrics. Node size color   determined either enrichment entropy values, depending `average_proportion` flag.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/convert_to_diagrammer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Gating Tree to DiagrammeR Graph — convert_to_diagrammer","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming 'root' is your gating tree root node   graph <- convert_to_diagrammer(root, size_factor = 1, average_proportion = TRUE)   # To view the graph   DiagrammeR::render_graph(graph) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Count Nodes — count_nodes","title":"Count Nodes — count_nodes","text":"function counts total number nodes gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Nodes — count_nodes","text":"","code":"count_nodes(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Nodes — count_nodes","text":"tree gating tree structure.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Nodes — count_nodes","text":"total number nodes tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Nodes — count_nodes","text":"","code":"if (FALSE) { # \\dontrun{ count_nodes(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Nodes — count_nodes","title":"Count Nodes — count_nodes","text":"function counts total number nodes gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Nodes — count_nodes","text":"","code":"count_nodes(tree)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Nodes — count_nodes","text":"tree gating tree structure.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Nodes — count_nodes","text":"total number nodes tree.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/count_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Nodes — count_nodes","text":"","code":"if (FALSE) { # \\dontrun{ count_nodes(tree) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Child Node in a Gating Tree — createChildNode","title":"Create a Child Node in a Gating Tree — createChildNode","text":"Constructs child node gating tree based specified gating marker state, along related gating statistics history.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Child Node in a Gating Tree — createChildNode","text":"","code":"createChildNode(   marker,   current_marker_state,   indices,   available_markers,   current_entropy,   current_enrichment,   average_proportion,   entropy_scores,   enrichment_scores,   history,   isPositive = TRUE,   depth,   usedmarkers,   path )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Child Node in a Gating Tree — createChildNode","text":"marker Character string marker name. current_marker_state Current state markers node. indices Indices data used node. available_markers Markers available gating. current_entropy Current entropy score node. current_enrichment Current enrichment score node. average_proportion Average proportion cells within node. entropy_scores Entropy scores dataframe. enrichment_scores Enrichment scores dataframe. history List object containing history previous steps. isPositive Logical, indicating marker state positive. depth Integer, depth node tree. usedmarkers Vector markers already used previous nodes. path path root current node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Child Node in a Gating Tree — createChildNode","text":"object class 'GatingTreeNode'.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Child Node in a Gating Tree — createChildNode","text":"","code":"if (FALSE) { # \\dontrun{ marker = \"CD4\" state = c(1, 0, 2) indices = 1:100 markers = c(\"CD4\", \"CD8\") entropy = 0.5 enrichment = 0.7 scores = data.frame(score=runif(3)) history = list() depth = 1 usedmarkers = c(\"CD4\") path = \"rootNode\" createChildNode(marker, state, indices, markers, entropy, enrichment, scores, scores, history, TRUE, depth, usedmarkers, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Child Node in a Gating Tree — createChildNode","title":"Create a Child Node in a Gating Tree — createChildNode","text":"Constructs child node gating tree based specified gating marker state, along related gating statistics history.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Child Node in a Gating Tree — createChildNode","text":"","code":"createChildNode(   marker,   current_marker_state,   indices,   available_markers,   current_entropy,   current_enrichment,   average_proportion,   entropy_scores,   enrichment_scores,   history,   isPositive = TRUE,   depth,   usedmarkers,   path )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Child Node in a Gating Tree — createChildNode","text":"marker Character string marker name. current_marker_state Current state markers node. indices Indices data used node. available_markers Markers available gating. current_entropy Current entropy score node. current_enrichment Current enrichment score node. average_proportion Average proportion cells within node. entropy_scores Entropy scores dataframe. enrichment_scores Enrichment scores dataframe. history List object containing history previous steps. isPositive Logical, indicating marker state positive. depth Integer, depth node tree. usedmarkers Vector markers already used previous nodes. path path root current node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Child Node in a Gating Tree — createChildNode","text":"object class 'GatingTreeNode'.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createChildNode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Child Node in a Gating Tree — createChildNode","text":"","code":"if (FALSE) { # \\dontrun{ marker = \"CD4\" state = c(1, 0, 2) indices = 1:100 markers = c(\"CD4\", \"CD8\") entropy = 0.5 enrichment = 0.7 scores = data.frame(score=runif(3)) history = list() depth = 1 usedmarkers = c(\"CD4\") path = \"rootNode\" createChildNode(marker, state, indices, markers, entropy, enrichment, scores, scores, history, TRUE, depth, usedmarkers, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Gating Tree Object — createGatingTreeObject","title":"Create a Gating Tree Object — createGatingTreeObject","text":"Initializes populates gating tree based user-defined criteria, handling decision-making multiple layers gating hierarchy. function integrates gating rules, applies negative gating definitions, assesses cell population statistics manage flow cytometry data analysis process.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Gating Tree Object — createGatingTreeObject","text":"","code":"createGatingTreeObject(   x,   select_markers = FALSE,   graphics = FALSE,   markers = NULL,   maxDepth = 3,   min_cell_num = 25,   expr_group = NULL,   ctrl_group = NULL,   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Gating Tree Object — createGatingTreeObject","text":"x object, expected class 'FlowObject', containing initial data parameters gating. select_markers Logical; TRUE, allows user select markers interactively. graphics Logical; TRUE, enables graphical selection markers. markers Optional; vector markers included choosing interactively. maxDepth Integer; maximum depth gating tree, controlling many levels decision nodes can created. min_cell_num minimal number cells allowed nodes. expr_group Optional; character specify experimental group. NULL, determined interactively. ctrl_group Optional; character specify control group. NULL, determined interactively. verbose Logical indicating whether print progress messages outputs. Default TRUE.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Gating Tree Object — createGatingTreeObject","text":"Modifies input object adding 'GatingTreeObject' contains   entire structure gating decisions nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Gating Tree Object — createGatingTreeObject","text":"function first checks type input object ensure matches expected classes. extracts necessary data parameters object, negative gating thresholds sample definitions. Depending options, may allow interactive selection markers. function constructs hierarchical tree node represents gating decision based statistical calculations like entropy enrichment, used determine next steps gating process terminate process. gating process involves: - Merging data sample definitions. - Calculating initial gating statistics. - Recursively creating child nodes based gating outcomes thresholds. - Dynamically managing markers gating paths based user-defined depth available data.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Gating Tree Object — createGatingTreeObject","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'x' is properly instantiated and contains necessary gating setups: x <- createGatingTreeObject(x, select_markers = TRUE, graphics = FALSE, maxDepth = 3) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Gating Tree Object — createGatingTreeObject","title":"Create a Gating Tree Object — createGatingTreeObject","text":"Initializes populates gating tree based user-defined criteria, handling decision-making multiple layers gating hierarchy. function integrates gating rules, applies negative gating definitions, assesses cell population statistics manage flow cytometry data analysis process.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Gating Tree Object — createGatingTreeObject","text":"","code":"createGatingTreeObject(   x,   select_markers = FALSE,   graphics = FALSE,   markers = NULL,   maxDepth = 3,   min_cell_num = 25,   expr_group = NULL,   ctrl_group = NULL,   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Gating Tree Object — createGatingTreeObject","text":"x object, expected class 'FlowObject', containing initial data parameters gating. select_markers Logical; TRUE, allows user select markers interactively. graphics Logical; TRUE, enables graphical selection markers. markers Optional; vector markers included choosing interactively. maxDepth Integer; maximum depth gating tree, controlling many levels decision nodes can created. min_cell_num minimal number cells allowed nodes. expr_group Optional; character specify experimental group. NULL, determined interactively. ctrl_group Optional; character specify control group. NULL, determined interactively. verbose Logical indicating whether print progress messages outputs. Default TRUE.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Gating Tree Object — createGatingTreeObject","text":"Modifies input object adding 'GatingTreeObject' contains   entire structure gating decisions nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Gating Tree Object — createGatingTreeObject","text":"function first checks type input object ensure matches expected classes. extracts necessary data parameters object, negative gating thresholds sample definitions. Depending options, may allow interactive selection markers. function constructs hierarchical tree node represents gating decision based statistical calculations like entropy enrichment, used determine next steps gating process terminate process. gating process involves: - Merging data sample definitions. - Calculating initial gating statistics. - Recursively creating child nodes based gating outcomes thresholds. - Dynamically managing markers gating paths based user-defined depth available data.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/createGatingTreeObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Gating Tree Object — createGatingTreeObject","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'x' is properly instantiated and contains necessary gating setups: x <- createGatingTreeObject(x, select_markers = TRUE, graphics = FALSE, maxDepth = 3) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"function exports negative gate definitions FlowObject CSV file. stop negative gate definitions found within FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"","code":"export_negative_gate_def(x, filename = \"negative_gate_def.csv\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"x FlowObject containing negative gate definitions. filename name file negative gate definitions written.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"FlowObject, unchanged, side effect writing file.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"","code":"if (FALSE) { # \\dontrun{ export_negative_gate_def(x, filename = \"negative_gate_def.csv\") } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"function exports negative gate definitions FlowObject CSV file. stop negative gate definitions found within FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"","code":"export_negative_gate_def(x, filename = \"negative_gate_def.csv\")"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"x FlowObject containing negative gate definitions. filename name file negative gate definitions written.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"FlowObject, unchanged, side effect writing file.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/export_negative_gate_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Negative Gate Definitions from FlowObject — export_negative_gate_def","text":"","code":"if (FALSE) { # \\dontrun{ export_negative_gate_def(x, filename = \"negative_gate_def.csv\") } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Extract All Nodes from GatingTree — extractNodes","title":"Extract All Nodes from GatingTree — extractNodes","text":"function recursively extracts nodes specified GatingTree object within FlowObject, either full GatingTree pruned version.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract All Nodes from GatingTree — extractNodes","text":"","code":"extractNodes(x, pruned = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract All Nodes from GatingTree — extractNodes","text":"x FlowObject containing GatingTree. pruned Logical indicating whether extract nodes pruned GatingTree. Defaults FALSE.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract All Nodes from GatingTree — extractNodes","text":"data frame containing details nodes specified GatingTree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract All Nodes from GatingTree — extractNodes","text":"","code":"if (FALSE) { # \\dontrun{   full_tree_nodes <- extractNodes(x)   pruned_tree_nodes <- extractNodes(x, pruned = TRUE) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract All Nodes from GatingTree — extractNodes","title":"Extract All Nodes from GatingTree — extractNodes","text":"function recursively extracts nodes specified GatingTree object within FlowObject, either full GatingTree pruned version.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract All Nodes from GatingTree — extractNodes","text":"","code":"extractNodes(x, pruned = FALSE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract All Nodes from GatingTree — extractNodes","text":"x FlowObject containing GatingTree. pruned Logical indicating whether extract nodes pruned GatingTree. Defaults FALSE.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract All Nodes from GatingTree — extractNodes","text":"data frame containing details nodes specified GatingTree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/extractNodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract All Nodes from GatingTree — extractNodes","text":"","code":"if (FALSE) { # \\dontrun{   full_tree_nodes <- extractNodes(x)   pruned_tree_nodes <- extractNodes(x, pruned = TRUE) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Find a Node by Path in a Gating Tree — findNodeByPath","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"Traverses gating tree starting specified root node find return node located given path. path sequence node names indicating traversal route root target node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"","code":"findNodeByPath(rootNode, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"rootNode root node gating tree start search. path character vector representing path desired node. element vector correspond node name level tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"Returns node specified path found.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"","code":"if (FALSE) { # \\dontrun{ rootNode <- createGatingTreeObject(...) # setup initial node, assumes function definition path <- c(\"rootNode\", \"CD4pos\", \"CD8neg\") # example path to find a specific node tryCatch({   targetNode <- findNodeByPath(rootNode, path)   print(targetNode) }, error = function(e) {   cat(\"Error in findNodeByPath: \", e$message, \"\\n\") }) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a Node by Path in a Gating Tree — findNodeByPath","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"Traverses gating tree starting specified root node find return node located given path. path sequence node names indicating traversal route root target node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"","code":"findNodeByPath(rootNode, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"rootNode root node gating tree start search. path character vector representing path desired node. element vector correspond node name level tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"Returns node specified path found.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/findNodeByPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a Node by Path in a Gating Tree — findNodeByPath","text":"","code":"if (FALSE) { # \\dontrun{ rootNode <- createGatingTreeObject(...) # setup initial node, assumes function definition path <- c(\"rootNode\", \"CD4pos\", \"CD8neg\") # example path to find a specific node tryCatch({   targetNode <- findNodeByPath(rootNode, path)   print(targetNode) }, error = function(e) {   cat(\"Error in findNodeByPath: \", e$message, \"\\n\") }) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Update Nodes Based on External Data — find_and_update_nodes","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"function updates nodes set prune flags based comparison external data frame specifies node combinations pruned.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"","code":"find_and_update_nodes(node, path = NULL, res_df)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"node node update. path current path nodes, initially NULL. res_df data frame containing combinations pruned.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"node updated prune flags.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"","code":"if (FALSE) { # \\dontrun{   updated_node <- find_and_update_nodes(node, NULL, res_df) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Nodes Based on External Data — find_and_update_nodes","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"function updates nodes set prune flags based comparison external data frame specifies node combinations pruned.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"","code":"find_and_update_nodes(node, path = NULL, res_df)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"node node update. path current path nodes, initially NULL. res_df data frame containing combinations pruned.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"node updated prune flags.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/find_and_update_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Nodes Based on External Data — find_and_update_nodes","text":"","code":"if (FALSE) { # \\dontrun{   updated_node <- find_and_update_nodes(node, NULL, res_df) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new FlowObject — flowObject","title":"Create a new FlowObject — flowObject","text":"function constructs new FlowObject using various inputs related flow cytometry analysis, including data, sample definitions, metadata, data processing configurations.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new FlowObject — flowObject","text":"","code":"flowObject(   Data = data.frame(),   sampledef = new(\"SampleDef\"),   metadata = list(),   prep = list(),   Clustering = list(),   Gating = list(),   QCdata = list(),   Transformation = list() )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new FlowObject — flowObject","text":"Data data frame containing flow cytometric expression data. sampledef object class SampleDef, specifying sample definitions. metadata list containing annotation data flow cytometry experiment. prep list character string vectors defining samples controls. Clustering list containing cell identities clustering data. Gating list containing outputs gating, including GatingTree objects. QCdata list containing quality control information flow cytometry data. Transformation list containing settings data transformation, including log data settings.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new FlowObject — flowObject","text":"object class FlowObject, encapsulates provided data settings flow cytometry analysis.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new FlowObject — flowObject","title":"Create a new FlowObject — flowObject","text":"function constructs new FlowObject using various inputs related flow cytometry analysis, including data, sample definitions, metadata, data processing configurations.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new FlowObject — flowObject","text":"","code":"flowObject(   Data = data.frame(),   sampledef = new(\"SampleDef\"),   metadata = list(),   prep = list(),   Clustering = list(),   Gating = list(),   QCdata = list(),   Transformation = list() )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new FlowObject — flowObject","text":"Data data frame containing flow cytometric expression data. sampledef object class SampleDef, specifying sample definitions. metadata list containing annotation data flow cytometry experiment. prep list character string vectors defining samples controls. Clustering list containing cell identities clustering data. Gating list containing outputs gating, including GatingTree objects. QCdata list containing quality control information flow cytometry data. Transformation list containing settings data transformation, including log data settings.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/flowObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new FlowObject — flowObject","text":"object class FlowObject, encapsulates provided data settings flow cytometry analysis.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"Computes entropy associated gating, categorizing data 'High' 'Low' based whether gated percentage group overall mean percentage. function useful analyzing variability predictability gating outcomes across different groups.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"","code":"gating_entropy(positive_percentage)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"positive_percentage data frame least two columns: 'group' categorizes data, 'gated_percentage' represents percentage criterion met (e.g., cells positive marker).","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"single numeric value representing entropy, quantifies   unpredictability associated gating classifications across groups.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"","code":"if (FALSE) { # \\dontrun{ gating_entropy(data) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"Computes entropy associated gating, categorizing data 'High' 'Low' based whether gated percentage group overall mean percentage. function useful analyzing variability predictability gating outcomes across different groups.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"","code":"gating_entropy(positive_percentage)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"positive_percentage data frame least two columns: 'group' categorizes data, 'gated_percentage' represents percentage criterion met (e.g., cells positive marker).","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"single numeric value representing entropy, quantifies   unpredictability associated gating classifications across groups.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/gating_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Gating Entropy Based on Positive Percentages — gating_entropy","text":"","code":"if (FALSE) { # \\dontrun{ gating_entropy(data) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"General Node Rule for Gating Strategy — general_node_rule","title":"General Node Rule for Gating Strategy — general_node_rule","text":"function processes gating decisions based given markers states, managing data root node determine optimal gating paths based entropy enrichment calculations. handles decision-making node gating tree, determining whether continue subdividing terminate based statistical thresholds data availability.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Node Rule for Gating Strategy — general_node_rule","text":"","code":"general_node_rule(   currentNode,   root_data,   sampledef,   neg_gate,   expr_group,   ctrl_group,   total_cell_per_file,   usedmarkers,   min_cell_num = 25 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Node Rule for Gating Strategy — general_node_rule","text":"currentNode list representing current node gating tree, including markers used, current node indices, gating history. root_data data frame containing complete dataset analysis. sampledef data frame specifying sample definitions group assignments. neg_gate list containing thresholds negative gating decisions. expr_group name experimental group within `sampledef`. ctrl_group name control group within `sampledef`. total_cell_per_file data frame mapping file names total cell counts per file. usedmarkers vector markers already used previous steps gating. min_cell_num minimal number cells allowed nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Node Rule for Gating Strategy — general_node_rule","text":"list structure describing outcomes current node, including child   nodes created, indicators node processing leads termination.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Node Rule for Gating Strategy — general_node_rule","text":"","code":"# Assuming the function is part of a larger framework and dependencies are met: if (FALSE) { # \\dontrun{ result <- general_node_rule(currentNode, markers, root_data, sampledef, neg_gate,  expr_group, ctrl_group, total_cell_per_file, usedmarkers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"General Node Rule for Gating Strategy — general_node_rule","title":"General Node Rule for Gating Strategy — general_node_rule","text":"function processes gating decisions based given markers states, managing data root node determine optimal gating paths based entropy enrichment calculations. handles decision-making node gating tree, determining whether continue subdividing terminate based statistical thresholds data availability.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Node Rule for Gating Strategy — general_node_rule","text":"","code":"general_node_rule(   currentNode,   root_data,   sampledef,   neg_gate,   expr_group,   ctrl_group,   total_cell_per_file,   usedmarkers,   min_cell_num = 25 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Node Rule for Gating Strategy — general_node_rule","text":"currentNode list representing current node gating tree, including markers used, current node indices, gating history. root_data data frame containing complete dataset analysis. sampledef data frame specifying sample definitions group assignments. neg_gate list containing thresholds negative gating decisions. expr_group name experimental group within `sampledef`. ctrl_group name control group within `sampledef`. total_cell_per_file data frame mapping file names total cell counts per file. usedmarkers vector markers already used previous steps gating. min_cell_num minimal number cells allowed nodes.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Node Rule for Gating Strategy — general_node_rule","text":"list structure describing outcomes current node, including child   nodes created, indicators node processing leads termination.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/general_node_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Node Rule for Gating Strategy — general_node_rule","text":"","code":"# Assuming the function is part of a larger framework and dependencies are met: if (FALSE) { # \\dontrun{ result <- general_node_rule(currentNode, markers, root_data, sampledef, neg_gate,  expr_group, ctrl_group, total_cell_per_file, usedmarkers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Concatenated Marker Names Based on States — generate_marker_names","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"Constructs string represents combination markers states (negative positive). function appends \".neg\" \".pos\" marker based state provided `marker_states`. function returns single string names concatenated, separated underscores. markers specified included (non-empty), returns \"all_unassigned\".","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"","code":"generate_marker_names(marker_states, markers)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"marker_states numeric vector indicating state marker 1 represents negative (\".neg\") 2 represents positive (\".pos\"). markers character vector marker names corresponding states `marker_states`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"character string concatenated marker names states.   markers specified, returns \"all_unassigned\".","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"","code":"if (FALSE) { # \\dontrun{ markers <- c(\"CD4\", \"CD8\", \"CD19\") states <- c(1, 2, 0)  # CD4.neg, CD8.pos, CD19 not included generate_marker_names(states, markers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Concatenated Marker Names Based on States — generate_marker_names","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"Constructs string represents combination markers states (negative positive). function appends \".neg\" \".pos\" marker based state provided `marker_states`. function returns single string names concatenated, separated underscores. markers specified included (non-empty), returns \"all_unassigned\".","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"","code":"generate_marker_names(marker_states, markers)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"marker_states numeric vector indicating state marker 1 represents negative (\".neg\") 2 represents positive (\".pos\"). markers character vector marker names corresponding states `marker_states`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"character string concatenated marker names states.   markers specified, returns \"all_unassigned\".","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/generate_marker_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Concatenated Marker Names Based on States — generate_marker_names","text":"","code":"if (FALSE) { # \\dontrun{ markers <- c(\"CD4\", \"CD8\", \"CD19\") states <- c(1, 2, 0)  # CD4.neg, CD8.pos, CD19 not included generate_marker_names(states, markers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Node from a Gating Tree — getNode","title":"Retrieve a Node from a Gating Tree — getNode","text":"function traverses gating tree structure retrieve node specified path.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Node from a Gating Tree — getNode","text":"","code":"getNode(gatingTreeObject, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Node from a Gating Tree — getNode","text":"gatingTreeObject root object gating tree containing child nodes. path vector node names specifying path desired node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Node from a Gating Tree — getNode","text":"node object specified path.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Node from a Gating Tree — getNode","text":"","code":"if (FALSE) { # \\dontrun{ gatingTreeObject <- createGatingTreeObject(...) # assuming this function exists path <- c(\"rootNode\", \"CD4pos\") getNode(gatingTreeObject, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Node from a Gating Tree — getNode","title":"Retrieve a Node from a Gating Tree — getNode","text":"function traverses gating tree structure retrieve node specified path.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Node from a Gating Tree — getNode","text":"","code":"getNode(gatingTreeObject, path)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Node from a Gating Tree — getNode","text":"gatingTreeObject root object gating tree containing child nodes. path vector node names specifying path desired node.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Node from a Gating Tree — getNode","text":"node object specified path.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/getNode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Node from a Gating Tree — getNode","text":"","code":"if (FALSE) { # \\dontrun{ gatingTreeObject <- createGatingTreeObject(...) # assuming this function exists path <- c(\"rootNode\", \"CD4pos\") getNode(gatingTreeObject, path) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"function imports specified negative gate definition data frame FlowObject. data frame must contain exactly two columns: 'variable' 'negative.gate'.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"","code":"import_negative_gate_def(x, negative_gate_def)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"x FlowObject. negative_gate_def data frame containing negative gate definitions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"modified FlowObject updated negative gate definitions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"","code":"if (FALSE) { # \\dontrun{ x <- import_negative_gate_def(x, negative_gate_def = my_gate_definitions) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"function imports specified negative gate definition data frame FlowObject. data frame must contain exactly two columns: 'variable' 'negative.gate'.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"","code":"import_negative_gate_def(x, negative_gate_def)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"x FlowObject. negative_gate_def data frame containing negative gate definitions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"modified FlowObject updated negative gate definitions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/import_negative_gate_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Negative Gate Definitions into FlowObject — import_negative_gate_def","text":"","code":"if (FALSE) { # \\dontrun{ x <- import_negative_gate_def(x, negative_gate_def = my_gate_definitions) } # }"},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/index (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Package index","title":"Package index","text":"CreateFlowObject() Create FlowObject importing flow cytometric data DefineNegatives() Interactively determine gates define negative (positive) regions marker expression FlowObject-class class representing FlowObject object GatingTreeToDF() Convert Gating Tree Object Data Frames LogData() Log fluorescence data NormAF() Moderate Extreme Negative Outliers Random Values within Noise PlotDefineNegatives() Plot threshold marker expression per determined DefineNegatives PlotDeltaEnrichment() Plot Delta Enrichment Interaction Effects Marker PlotDeltaEnrichmentPrunedTree() Plot Delta Enrichment Interaction Effects Marker Using Pruned GatingTree PlotFlow2D() Two-Dimensional Plot Gating Quadrant Statistics PlotNodeScatterPlot() Plot Node Scatter Plot PlotNormAF() Plot Effects Autofluorescnce Modelling PruneGatingTree() Prune Gating Tree Based Statistical Criteria SampleDef() SampleDef addChildNode() Add Child Node Gating Tree collect_history() Collect History Gating Tree collect_leaf_enrichment() Collect Enrichment Data Leaf Nodes collect_markers() Collect Markers Gating Tree convertToDataTree() Convert Gating Tree Node Data Tree Node convert_to_diagrammer() Convert Gating Tree DiagrammeR Graph createChildNode() Create Child Node Gating Tree createGatingTreeObject() Create Gating Tree Object export_negative_gate_def() Export Negative Gate Definitions FlowObject extractNodes() Extract Nodes GatingTree findNodeByPath() Find Node Path Gating Tree flowObject() Create new FlowObject getNode() Retrieve Node Gating Tree import_negative_gate_def() Import Negative Gate Definitions FlowObject logSingleData() Logarithmically Transforms Vector logTransformData() Logarithmically Transforms Column Matrix moderate_log_transform() Moderately Log Transforms Vector Adjustments recursiveAddChildNode() Recursively Add Child Nodes Gating Tree showSampleDef() Show SampleDef","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a FlowObject — initialize,FlowObject-method","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"Initialize FlowObject","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"","code":"# S4 method for class 'FlowObject' initialize(   .Object,   Data = data.frame(),   sampledef = new(\"SampleDef\"),   QCdata = list(),   Transformation = list(),   prep = list(),   Gating = list(),   metadata = list(),   Clustering = list() )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a FlowObject — initialize,FlowObject-method","text":".Object FlowObject Data data frame containing raw flow cytometry data. sampledef SampleDef object containing sample file definitions. QCdata list containing quality control information flow cytometry data. Transformation list containing settings data transformation, including log data settings. prep list character string vectors defining samples controls. Gating list containing outputs Gating. metadata list containing annotation data Clustering list containing cell identities clustering data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"FlowObject","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a FlowObject — initialize,FlowObject-method","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"Initialize FlowObject","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"","code":"# S4 method for class 'FlowObject' initialize(   .Object,   Data = data.frame(),   sampledef = new(\"SampleDef\"),   QCdata = list(),   Transformation = list(),   prep = list(),   Gating = list(),   metadata = list(),   Clustering = list() )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a FlowObject — initialize,FlowObject-method","text":".Object FlowObject Data data frame containing raw flow cytometry data. sampledef SampleDef object containing sample file definitions. QCdata list containing quality control information flow cytometry data. Transformation list containing settings data transformation, including log data settings. prep list character string vectors defining samples controls. Gating list containing outputs Gating. metadata list containing annotation data Clustering list containing cell identities clustering data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/initialize-FlowObject-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a FlowObject — initialize,FlowObject-method","text":"FlowObject","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmically Transforms a Vector — logSingleData","title":"Logarithmically Transforms a Vector — logSingleData","text":"Applies logarithmic transformation element numeric vector. Elements greater 1 transformed using log10, elements less equal 1 set 0.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmically Transforms a Vector — logSingleData","text":"","code":"logSingleData(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmically Transforms a Vector — logSingleData","text":"x numeric vector transformed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmically Transforms a Vector — logSingleData","text":"numeric vector transformed values.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmically Transforms a Vector — logSingleData","text":"","code":"logSingleData(c(10, 1, 0.5, 20)) #> [1] 1.00000 0.00000 0.00000 1.30103"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmically Transforms a Vector — logSingleData","title":"Logarithmically Transforms a Vector — logSingleData","text":"Applies logarithmic transformation element numeric vector. Elements greater 1 transformed using log10, elements less equal 1 set 0.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmically Transforms a Vector — logSingleData","text":"","code":"logSingleData(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmically Transforms a Vector — logSingleData","text":"x numeric vector transformed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmically Transforms a Vector — logSingleData","text":"numeric vector transformed values.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logSingleData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmically Transforms a Vector — logSingleData","text":"","code":"logSingleData(c(10, 1, 0.5, 20)) #> [1] 1.00000 0.00000 0.00000 1.30103"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmically Transforms Each Column of a Matrix — logTransformData","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"Transforms column numeric matrix applying logarithmic transformation adjusted quantile safety margin.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"","code":"logTransformData(data, quant_val = 0.001, safety_margin = 100)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"data numeric matrix whose columns transformed. quant_val quantile value used transformation adjustment. safety_margin numeric value added safety ensure positive logarithm domain.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"numeric matrix column transformed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"","code":"data <- matrix(c(1, 2, 3, 4, 5, 6), nrow=2) logTransformData(data) #>          [,1]     [,2]     [,3] #> [1,] 2.000000 2.000000 2.000000 #> [2,] 2.004321 2.004321 2.004321"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmically Transforms Each Column of a Matrix — logTransformData","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"Transforms column numeric matrix applying logarithmic transformation adjusted quantile safety margin.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"","code":"logTransformData(data, quant_val = 0.001, safety_margin = 100)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"data numeric matrix whose columns transformed. quant_val quantile value used transformation adjustment. safety_margin numeric value added safety ensure positive logarithm domain.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"numeric matrix column transformed.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/logTransformData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmically Transforms Each Column of a Matrix — logTransformData","text":"","code":"data <- matrix(c(1, 2, 3, 4, 5, 6), nrow=2) logTransformData(data) #>          [,1]     [,2]     [,3] #> [1,] 2.000000 2.000000 2.000000 #> [2,] 2.004321 2.004321 2.004321"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"Applies moderated logarithmic transformation numeric vector. Adjustments made based specified quantile floor value. transformed values guaranteed domain suitable log10.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"","code":"moderate_log_transform(x, q, f)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"x numeric vector transformed. q quantile adjustment value. f minimum value adjustment floor, used avoid negative zero logarithm domain.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"numeric vector logarithmically transformed values.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"","code":"moderate_log_transform(c(1, 2, 3, 4, 5), 0.5, 0.1) #> [1] 0.0000000 0.2041200 0.4149733 0.5563025 0.6627578"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"Applies moderated logarithmic transformation numeric vector. Adjustments made based specified quantile floor value. transformed values guaranteed domain suitable log10.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"","code":"moderate_log_transform(x, q, f)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"x numeric vector transformed. q quantile adjustment value. f minimum value adjustment floor, used avoid negative zero logarithm domain.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"numeric vector logarithmically transformed values.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_log_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moderately Log Transforms a Vector with Adjustments — moderate_log_transform","text":"","code":"moderate_log_transform(c(1, 2, 3, 4, 5), 0.5, 0.1) #> [1] 0.0000000 0.2041200 0.4149733 0.5563025 0.6627578"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"To moderate extreme negative values in an expression vector — moderate_negative","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"moderate extreme negative values expression vector","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"","code":"moderate_negative(expression, neg, main, plot = TRUE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"expression numeric vector neg negative threshold value main title plot plot Logical whether produce plots","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"moderated expression data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"","code":"if (FALSE) { # \\dontrun{ expression  <-  moderate_negative(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative.html","id":null,"dir":"Reference","previous_headings":"","what":"To moderate extreme negative values in an expression vector — moderate_negative","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"moderate extreme negative values expression vector","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"","code":"moderate_negative(expression, neg, main, plot = TRUE)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"expression numeric vector neg negative threshold value main title plot plot Logical whether produce plots","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"moderated expression data","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/moderate_negative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To moderate extreme negative values in an expression vector — moderate_negative","text":"","code":"if (FALSE) { # \\dontrun{ expression  <-  moderate_negative(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Prune Tree — prune_tree","title":"Prune Tree — prune_tree","text":"Recursively prunes tree based prune markers set `add_prune`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune Tree — prune_tree","text":"","code":"prune_tree(node)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune Tree — prune_tree","text":"node root node tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune Tree — prune_tree","text":"pruned tree NULL root node pruned.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune Tree — prune_tree","text":"","code":"if (FALSE) { # \\dontrun{   pruned_tree <- prune_tree(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune Tree — prune_tree","title":"Prune Tree — prune_tree","text":"Recursively prunes tree based prune markers set `add_prune`.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune Tree — prune_tree","text":"","code":"prune_tree(node)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune Tree — prune_tree","text":"node root node tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune Tree — prune_tree","text":"pruned tree NULL root node pruned.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/prune_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune Tree — prune_tree","text":"","code":"if (FALSE) { # \\dontrun{   pruned_tree <- prune_tree(root_node) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"function recursively expands gating tree adding child nodes according gating rules. designed iteratively apply gating decisions specified depth subdivisions applicable (terminal nodes).","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"","code":"recursiveAddChildNode(   currentNode,   root_data,   sampledef,   neg_gate,   expr_group,   ctrl_group,   total_cell_per_file,   maxDepth = 3,   usedmarkers,   min_cell_num = 25,   depth = 1 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"currentNode current node gating tree children generated. root_data data frame containing data set used gating decisions. sampledef data frame specifying sample definitions group assignments. neg_gate list containing thresholds negative gating decisions. expr_group name experimental group within `sampledef`. ctrl_group name control group within `sampledef`. total_cell_per_file data frame mapping file names total cell counts, used normalization. maxDepth maximum depth tree can expand. usedmarkers vector markers already used gating path current node. min_cell_num minimal number cells allowed nodes. depth Integer, depth node tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"modified current node potentially new child nodes added, reflecting gating tree expansion.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"function checks current node terminated depth equals maximum allowed depth. , applies gating rules decide expand tree adding child nodes. decisions based statistical measures enrichment entropy, calculated different marker states. child node results terminal condition ('Leaf'), tree expansion stops node. function uses recursion navigate expand deeper levels tree, ensuring potential gating paths explored `maxDepth` divisions valid.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming currentNode and other required objects are predefined: updatedNode <- recursiveAddChildNode(currentNode, root_data, sampledef, neg_gate, expr_group, ctrl_group, total_cell_per_file, maxDepth = 3, usedmarkers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"function recursively expands gating tree adding child nodes according gating rules. designed iteratively apply gating decisions specified depth subdivisions applicable (terminal nodes).","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"","code":"recursiveAddChildNode(   currentNode,   root_data,   sampledef,   neg_gate,   expr_group,   ctrl_group,   total_cell_per_file,   maxDepth = 3,   usedmarkers,   min_cell_num = 25,   depth = 1 )"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"currentNode current node gating tree children generated. root_data data frame containing data set used gating decisions. sampledef data frame specifying sample definitions group assignments. neg_gate list containing thresholds negative gating decisions. expr_group name experimental group within `sampledef`. ctrl_group name control group within `sampledef`. total_cell_per_file data frame mapping file names total cell counts, used normalization. maxDepth maximum depth tree can expand. usedmarkers vector markers already used gating path current node. min_cell_num minimal number cells allowed nodes. depth Integer, depth node tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"modified current node potentially new child nodes added, reflecting gating tree expansion.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"function checks current node terminated depth equals maximum allowed depth. , applies gating rules decide expand tree adding child nodes. decisions based statistical measures enrichment entropy, calculated different marker states. child node results terminal condition ('Leaf'), tree expansion stops node. function uses recursion navigate expand deeper levels tree, ensuring potential gating paths explored `maxDepth` divisions valid.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/recursiveAddChildNode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursively Add Child Nodes in a Gating Tree — recursiveAddChildNode","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming currentNode and other required objects are predefined: updatedNode <- recursiveAddChildNode(currentNode, root_data, sampledef, neg_gate, expr_group, ctrl_group, total_cell_per_file, maxDepth = 3, usedmarkers) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for the FlowObject class — show.FlowObject","title":"Show method for the FlowObject class — show.FlowObject","text":"Displays summary information various slots FlowObject object","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for the FlowObject class — show.FlowObject","text":"","code":"# S3 method for class 'FlowObject' show(object)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for the FlowObject class — show.FlowObject","text":"object object FlowObject class","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for the FlowObject class — show.FlowObject","title":"Show method for the FlowObject class — show.FlowObject","text":"Displays summary information various slots FlowObject object","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for the FlowObject class — show.FlowObject","text":"","code":"# S3 method for class 'FlowObject' show(object)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/show.FlowObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for the FlowObject class — show.FlowObject","text":"object object FlowObject class","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":null,"dir":"Reference","previous_headings":"","what":"Show SampleDef — showSampleDef","title":"Show SampleDef — showSampleDef","text":"Show SampleDef","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show SampleDef — showSampleDef","text":"","code":"showSampleDef(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show SampleDef — showSampleDef","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef (dyn3161-22.wlan.ic.ac.uk's conflicted copy 2024-11-23).html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show SampleDef — showSampleDef","text":"","code":"if (FALSE) { # \\dontrun{ showSampleDef(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef.html","id":null,"dir":"Reference","previous_headings":"","what":"Show SampleDef — showSampleDef","title":"Show SampleDef — showSampleDef","text":"Show SampleDef","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show SampleDef — showSampleDef","text":"","code":"showSampleDef(x)"},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show SampleDef — showSampleDef","text":"x FlowObject.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/reference/showSampleDef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show SampleDef — showSampleDef","text":"","code":"if (FALSE) { # \\dontrun{ showSampleDef(x) } # }"},{"path":"https://MonoTockyLab.github.io/GatingTree/news/index.html","id":"changes-in-version-010-2024-11-08","dir":"Changelog","previous_headings":"","what":"Changes in version 0.1.0 (2024-11-08)","title":"Changes in version 0.1.0 (2024-11-08)","text":"Fixed: Resolved NAMESPACE issue affecting documentation visibility certain functions.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/news/index.html","id":"changes-in-version-010-2024-11-12","dir":"Changelog","previous_headings":"","what":"Changes in version 0.1.0 (2024-11-12)","title":"Changes in version 0.1.0 (2024-11-12)","text":"PruneGatingTree Function: Corrected issue pruning logic properly adhere initial pruning criteria failed consistently retain parent nodes child nodes met retention conditions. fix ensures function now correctly applies specified thresholds respects hierarchical structure gating tree.","code":""},{"path":"https://MonoTockyLab.github.io/GatingTree/news/index.html","id":"changes-in-version-011-2024-11-17","dir":"Changelog","previous_headings":"","what":"Changes in Version 0.1.1 (2024-11-17)","title":"Changes in Version 0.1.1 (2024-11-17)","text":"PlotDeltaEnrichment PlotDeltaEnrichmentPrunedTree: option significant removed. Instead, new function PlotDeltaEnrichmentPrunedTree now available, powerful assessing impacts important markers.","code":""}]
